{"ast":null,"code":"import { defineComponent, computed, h } from 'vue';\nimport '../../../hooks/index2.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index2.mjs';\nconst _sfc_main = defineComponent({\n  name: \"ElMarker\",\n  props: {\n    mark: {\n      type: [String, Object],\n      default: () => void 0\n    }\n  },\n  setup(props) {\n    const ns = useNamespace(\"slider\");\n    const label = computed(() => {\n      return typeof props.mark === \"string\" ? props.mark : props.mark.label;\n    });\n    return {\n      ns,\n      label\n    };\n  },\n  render() {\n    var _a;\n    return h(\"div\", {\n      class: this.ns.e(\"marks-text\"),\n      style: (_a = this.mark) == null ? void 0 : _a.style\n    }, this.label);\n  }\n});\nvar SliderMarker = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/slider/src/marker.vue\"]]);\nexport { SliderMarker as default };","map":{"version":3,"mappings":";;;;AAMA,MAAKA,YAAaC,eAAa;EAC7BC,IAAM;EACNC,KAAO;IACLC,IAAM;MACJC,MAAM,CAACC,QAAQC,MAAM;MACrBC,SAASA,MAAM;IAAA;EACjB,CACF;EACAC,MAAMN,KAAO;IACL,WAAKO,aAAa,QAAQ;IAC1B,cAAQC,SAAS,MAAM;MAC3B,OAAO,OAAOR,KAAM,UAAS,WAAWA,KAAM,QAAOA,MAAMC,IAAK;IAAA,CACjE;IAEM;MACLQ;MACAC;IAAA,CACF;EAAA,CACF;EACAC,MAASA;IACP;IAEE,OACSC,OAAK,EAAG;MACfC,OAAO,KAAKJ,EAAM;MACpBK,OAEF;IAAA,CACF;EACF","names":["_sfc_main","defineComponent","name","props","mark","type","String","Object","default","setup","useNamespace","computed","ns","label","render","h","class","style"],"sources":["../../../../../../packages/components/slider/src/marker.vue"],"sourcesContent":["<script lang=\"ts\">\nimport { computed, defineComponent, h } from 'vue'\n\nimport { useNamespace } from '@element-plus/hooks'\nimport type { PropType } from 'vue'\n\nexport default defineComponent({\n  name: 'ElMarker',\n  props: {\n    mark: {\n      type: [String, Object] as PropType<string | Record<string, unknown>>,\n      default: () => undefined,\n    },\n  },\n  setup(props) {\n    const ns = useNamespace('slider')\n    const label = computed(() => {\n      return typeof props.mark === 'string' ? props.mark : props.mark.label\n    })\n\n    return {\n      ns,\n      label,\n    }\n  },\n  render() {\n    return h(\n      'div',\n      {\n        class: this.ns.e('marks-text'),\n        style: this.mark?.style,\n      },\n      this.label\n    )\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}