{"ast":null,"code":"import { defineComponent, openBlock, createBlock, resolveDynamicComponent, normalizeClass, withCtx, createElementVNode, withDirectives, createElementBlock, vModelCheckbox, renderSlot, Fragment, createTextVNode, toDisplayString, createCommentVNode } from 'vue';\nimport '../../../constants/index2.mjs';\nimport '../../../hooks/index2.mjs';\nimport { useCheckboxProps, useCheckbox } from './useCheckbox2.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event2.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index2.mjs';\nconst _sfc_main = defineComponent({\n  name: \"ElCheckbox\",\n  props: useCheckboxProps,\n  emits: [UPDATE_MODEL_EVENT, \"change\"],\n  setup(props, {\n    slots\n  }) {\n    const ns = useNamespace(\"checkbox\");\n    return {\n      ns,\n      ...useCheckbox(props, slots)\n    };\n  }\n});\nconst _hoisted_1 = [\"tabindex\", \"role\", \"aria-checked\"];\nconst _hoisted_2 = [\"id\", \"aria-hidden\", \"name\", \"tabindex\", \"disabled\", \"true-value\", \"false-value\"];\nconst _hoisted_3 = [\"id\", \"aria-hidden\", \"disabled\", \"value\", \"name\", \"tabindex\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createBlock(resolveDynamicComponent(!_ctx.hasOwnLabel && _ctx.isLabeledByFormItem ? \"span\" : \"label\"), {\n    class: normalizeClass([_ctx.ns.b(), _ctx.ns.m(_ctx.checkboxSize), _ctx.ns.is(\"disabled\", _ctx.isDisabled), _ctx.ns.is(\"bordered\", _ctx.border), _ctx.ns.is(\"checked\", _ctx.isChecked)]),\n    \"aria-controls\": _ctx.indeterminate ? _ctx.controls : null,\n    onClick: _ctx.onClickRoot\n  }, {\n    default: withCtx(() => [createElementVNode(\"span\", {\n      class: normalizeClass([_ctx.ns.e(\"input\"), _ctx.ns.is(\"disabled\", _ctx.isDisabled), _ctx.ns.is(\"checked\", _ctx.isChecked), _ctx.ns.is(\"indeterminate\", _ctx.indeterminate), _ctx.ns.is(\"focus\", _ctx.focus)]),\n      tabindex: _ctx.indeterminate ? 0 : void 0,\n      role: _ctx.indeterminate ? \"checkbox\" : void 0,\n      \"aria-checked\": _ctx.indeterminate ? \"mixed\" : void 0\n    }, [createElementVNode(\"span\", {\n      class: normalizeClass(_ctx.ns.e(\"inner\"))\n    }, null, 2), _ctx.trueLabel || _ctx.falseLabel ? withDirectives((openBlock(), createElementBlock(\"input\", {\n      key: 0,\n      id: _ctx.inputId,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.model = $event),\n      class: normalizeClass(_ctx.ns.e(\"original\")),\n      type: \"checkbox\",\n      \"aria-hidden\": _ctx.indeterminate ? \"true\" : \"false\",\n      name: _ctx.name,\n      tabindex: _ctx.tabindex,\n      disabled: _ctx.isDisabled,\n      \"true-value\": _ctx.trueLabel,\n      \"false-value\": _ctx.falseLabel,\n      onChange: _cache[1] || (_cache[1] = (...args) => _ctx.handleChange && _ctx.handleChange(...args)),\n      onFocus: _cache[2] || (_cache[2] = $event => _ctx.focus = true),\n      onBlur: _cache[3] || (_cache[3] = $event => _ctx.focus = false)\n    }, null, 42, _hoisted_2)), [[vModelCheckbox, _ctx.model]]) : withDirectives((openBlock(), createElementBlock(\"input\", {\n      key: 1,\n      id: _ctx.inputId,\n      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.model = $event),\n      class: normalizeClass(_ctx.ns.e(\"original\")),\n      type: \"checkbox\",\n      \"aria-hidden\": _ctx.indeterminate ? \"true\" : \"false\",\n      disabled: _ctx.isDisabled,\n      value: _ctx.label,\n      name: _ctx.name,\n      tabindex: _ctx.tabindex,\n      onChange: _cache[5] || (_cache[5] = (...args) => _ctx.handleChange && _ctx.handleChange(...args)),\n      onFocus: _cache[6] || (_cache[6] = $event => _ctx.focus = true),\n      onBlur: _cache[7] || (_cache[7] = $event => _ctx.focus = false)\n    }, null, 42, _hoisted_3)), [[vModelCheckbox, _ctx.model]])], 10, _hoisted_1), _ctx.hasOwnLabel ? (openBlock(), createElementBlock(\"span\", {\n      key: 0,\n      class: normalizeClass(_ctx.ns.e(\"label\"))\n    }, [renderSlot(_ctx.$slots, \"default\"), !_ctx.$slots.default ? (openBlock(), createElementBlock(Fragment, {\n      key: 0\n    }, [createTextVNode(toDisplayString(_ctx.label), 1)], 2112)) : createCommentVNode(\"v-if\", true)], 2)) : createCommentVNode(\"v-if\", true)]),\n    _: 3\n  }, 8, [\"class\", \"aria-controls\", \"onClick\"]);\n}\nvar Checkbox = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/checkbox/src/checkbox.vue\"]]);\nexport { Checkbox as default };","map":{"version":3,"mappings":";;;;;;;AAsEA,MAAKA,YAAaC,eAAa;EAC7BC,IAAM;EACNC,KAAO;EACPC,OAAO,CAACC,oBAAoB,QAAQ;EACpCC,MAAMH,KAAO;IAAEI;EAAS;IAChB,WAAKC,aAAa,UAAU;IAE3B;MACLC;MACG,eAAYN,OAAOI,KAAK;IAAA,CAC7B;EAAA;AAEJ,CAAC;;;;;sBAjFCG,WA6DY,0BA5DJC,oBAAeA,IAAmB;IACvCC,KAAK,kBAAUD,QAAGE,CAAC,IAAUF,QAAGG,EAAEH,IAAY,gBAASA,QAAGI,EAAE,aAAaJ,IAAU,cAASA,QAAGI,EAAE,aAAaJ,IAAM,UAASA,QAAGI,EAAE,YAAYJ,IAAS;IAOvJ,iBAAeA,qBAAgBA,IAAQ;IACvCK,OAAO;EAAA;qBAER,MA4CO,CA5CPC,kBA4CO;MA3CJL,KAAK,kBAAYD,QAAGO,CAAC,WAAmBP,QAAGI,EAAE,aAAaJ,IAAU,cAAWA,QAAGI,EAAE,YAAYJ,IAAS,aAAWA,QAAGI,EAAE,kBAAkBJ,IAAa,iBAAWA,QAAGI,EAAE,UAAUJ,IAAK;MAOvLQ,UAAUR,qBAAa,CAAO;MAC9BS,MAAMT,qBAAa,UAAgB;MACnC,gBAAcA,qBAAa,OAAa;IAAA,IAEzCM,kBAA+B;MAAxBL,OAAKS,cAAE,SAAGH,CAAC;IAAA,aAEVP,kBAAaA,+CADrBW,kBAeE;MAAAC;MAbCC,EAAI;MAAA,2DACIb,IAAK;MACbC,OAAKS,cAAE,SAAGH,CAAC;MACZO,IAAK;MACJ,eAAad,IAAa;MAC1BT,IAAM;MACNiB,QAAU;MACVO,QAAU;MACV,YAAY;MACZ,aAAa;MACbC,UAAMC,MAAE;MACRC,SAAKD,oCAAEjB,IAAK;MACZmB,QAAIF,oCAAEjB,IAAK;IAAA,6CAXHA,IAAK,yCAahBW,kBAcE;MAAAC;MAZCC,EAAI;MAAA,2DACIb,IAAK;MACbC,OAAKS,cAAE,SAAGH,CAAC;MACZO,IAAK;MACJ,eAAad,IAAa;MAC1Be,QAAU;MACVK,KAAO;MACP7B,IAAM;MACNiB,QAAU;MACVQ,UAAMC,MAAE;MACRC,SAAKD,oCAAEjB,IAAK;MACZmB,QAAIF,oCAAEjB,IAAK;IAAA,6CAVHA,IAAK,6BAaNA,iCAAZW,kBAGO;MAAAC;MAHmBX,KAAK,iBAAED,QAAGO,CAAC;IAAA,IACnCc,UAAQ,0BACS,aAAOC,wBAAxBX,kBAAuD;MAAAC;IAAA,oCAAnBZ,IAAK","names":["_sfc_main","defineComponent","name","props","emits","UPDATE_MODEL_EVENT","setup","slots","useNamespace","ns","_createBlock","_ctx","class","b","m","is","onClick","_createElementVNode","e","tabindex","role","_normalizeClass","_createElementBlock","key","id","type","disabled","onChange","_cache","onFocus","onBlur","value","_renderSlot","default"],"sources":["../../../../../../packages/components/checkbox/src/checkbox.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"!hasOwnLabel && isLabeledByFormItem ? 'span' : 'label'\"\n    :class=\"[\n      ns.b(),\n      ns.m(checkboxSize),\n      ns.is('disabled', isDisabled),\n      ns.is('bordered', border),\n      ns.is('checked', isChecked),\n    ]\"\n    :aria-controls=\"indeterminate ? controls : null\"\n    @click=\"onClickRoot\"\n  >\n    <span\n      :class=\"[\n        ns.e('input'),\n        ns.is('disabled', isDisabled),\n        ns.is('checked', isChecked),\n        ns.is('indeterminate', indeterminate),\n        ns.is('focus', focus),\n      ]\"\n      :tabindex=\"indeterminate ? 0 : undefined\"\n      :role=\"indeterminate ? 'checkbox' : undefined\"\n      :aria-checked=\"indeterminate ? 'mixed' : undefined\"\n    >\n      <span :class=\"ns.e('inner')\" />\n      <input\n        v-if=\"trueLabel || falseLabel\"\n        :id=\"inputId\"\n        v-model=\"model\"\n        :class=\"ns.e('original')\"\n        type=\"checkbox\"\n        :aria-hidden=\"indeterminate ? 'true' : 'false'\"\n        :name=\"name\"\n        :tabindex=\"tabindex\"\n        :disabled=\"isDisabled\"\n        :true-value=\"trueLabel\"\n        :false-value=\"falseLabel\"\n        @change=\"handleChange\"\n        @focus=\"focus = true\"\n        @blur=\"focus = false\"\n      />\n      <input\n        v-else\n        :id=\"inputId\"\n        v-model=\"model\"\n        :class=\"ns.e('original')\"\n        type=\"checkbox\"\n        :aria-hidden=\"indeterminate ? 'true' : 'false'\"\n        :disabled=\"isDisabled\"\n        :value=\"label\"\n        :name=\"name\"\n        :tabindex=\"tabindex\"\n        @change=\"handleChange\"\n        @focus=\"focus = true\"\n        @blur=\"focus = false\"\n      />\n    </span>\n    <span v-if=\"hasOwnLabel\" :class=\"ns.e('label')\">\n      <slot />\n      <template v-if=\"!$slots.default\">{{ label }}</template>\n    </span>\n  </component>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useCheckbox, useCheckboxProps } from './useCheckbox'\n\nexport default defineComponent({\n  name: 'ElCheckbox',\n  props: useCheckboxProps,\n  emits: [UPDATE_MODEL_EVENT, 'change'],\n  setup(props, { slots }) {\n    const ns = useNamespace('checkbox')\n\n    return {\n      ns,\n      ...useCheckbox(props, slots),\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}