{"ast":null,"code":"import { defineComponent, ref, computed, inject, toRef, watch, resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, renderSlot, Fragment, renderList, toDisplayString, createCommentVNode, createVNode, withCtx } from 'vue';\nimport dayjs from 'dayjs';\nimport { ElIcon } from '../../../icon/index2.mjs';\nimport '../../../../hooks/index2.mjs';\nimport { DArrowLeft, DArrowRight } from '@element-plus/icons-vue';\nimport MonthTable from './basic-month-table2.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index2.mjs';\nconst _sfc_main = defineComponent({\n  components: {\n    MonthTable,\n    ElIcon,\n    DArrowLeft,\n    DArrowRight\n  },\n  props: {\n    unlinkPanels: Boolean,\n    parsedValue: {\n      type: Array\n    }\n  },\n  emits: [\"pick\", \"set-picker-option\"],\n  setup(props, ctx) {\n    const {\n      t,\n      lang\n    } = useLocale();\n    const leftDate = ref(dayjs().locale(lang.value));\n    const rightDate = ref(dayjs().locale(lang.value).add(1, \"year\"));\n    const hasShortcuts = computed(() => !!shortcuts.length);\n    const handleShortcutClick = shortcut => {\n      const shortcutValues = typeof shortcut.value === \"function\" ? shortcut.value() : shortcut.value;\n      if (shortcutValues) {\n        ctx.emit(\"pick\", [dayjs(shortcutValues[0]).locale(lang.value), dayjs(shortcutValues[1]).locale(lang.value)]);\n        return;\n      }\n      if (shortcut.onClick) {\n        shortcut.onClick(ctx);\n      }\n    };\n    const leftPrevYear = () => {\n      leftDate.value = leftDate.value.subtract(1, \"year\");\n      if (!props.unlinkPanels) {\n        rightDate.value = rightDate.value.subtract(1, \"year\");\n      }\n    };\n    const rightNextYear = () => {\n      if (!props.unlinkPanels) {\n        leftDate.value = leftDate.value.add(1, \"year\");\n      }\n      rightDate.value = rightDate.value.add(1, \"year\");\n    };\n    const leftNextYear = () => {\n      leftDate.value = leftDate.value.add(1, \"year\");\n    };\n    const rightPrevYear = () => {\n      rightDate.value = rightDate.value.subtract(1, \"year\");\n    };\n    const leftLabel = computed(() => {\n      return `${leftDate.value.year()} ${t(\"el.datepicker.year\")}`;\n    });\n    const rightLabel = computed(() => {\n      return `${rightDate.value.year()} ${t(\"el.datepicker.year\")}`;\n    });\n    const leftYear = computed(() => {\n      return leftDate.value.year();\n    });\n    const rightYear = computed(() => {\n      return rightDate.value.year() === leftDate.value.year() ? leftDate.value.year() + 1 : rightDate.value.year();\n    });\n    const enableYearArrow = computed(() => {\n      return props.unlinkPanels && rightYear.value > leftYear.value + 1;\n    });\n    const minDate = ref(null);\n    const maxDate = ref(null);\n    const rangeState = ref({\n      endDate: null,\n      selecting: false\n    });\n    const handleChangeRange = val => {\n      rangeState.value = val;\n    };\n    const handleRangePick = (val, close = true) => {\n      const minDate_ = val.minDate;\n      const maxDate_ = val.maxDate;\n      if (maxDate.value === maxDate_ && minDate.value === minDate_) {\n        return;\n      }\n      maxDate.value = maxDate_;\n      minDate.value = minDate_;\n      if (!close) return;\n      handleConfirm();\n    };\n    const isValidValue = value => {\n      return Array.isArray(value) && value && value[0] && value[1] && value[0].valueOf() <= value[1].valueOf();\n    };\n    const handleConfirm = (visible = false) => {\n      if (isValidValue([minDate.value, maxDate.value])) {\n        ctx.emit(\"pick\", [minDate.value, maxDate.value], visible);\n      }\n    };\n    const onSelect = selecting => {\n      rangeState.value.selecting = selecting;\n      if (!selecting) {\n        rangeState.value.endDate = null;\n      }\n    };\n    const formatToString = value => {\n      return value.map(_ => _.format(format));\n    };\n    const getDefaultValue = () => {\n      let start;\n      if (Array.isArray(defaultValue.value)) {\n        const left = dayjs(defaultValue.value[0]);\n        let right = dayjs(defaultValue.value[1]);\n        if (!props.unlinkPanels) {\n          right = left.add(1, \"year\");\n        }\n        return [left, right];\n      } else if (defaultValue.value) {\n        start = dayjs(defaultValue.value);\n      } else {\n        start = dayjs();\n      }\n      start = start.locale(lang.value);\n      return [start, start.add(1, \"year\")];\n    };\n    ctx.emit(\"set-picker-option\", [\"formatToString\", formatToString]);\n    const pickerBase = inject(\"EP_PICKER_BASE\");\n    const {\n      shortcuts,\n      disabledDate,\n      format\n    } = pickerBase.props;\n    const defaultValue = toRef(pickerBase.props, \"defaultValue\");\n    watch(() => defaultValue.value, val => {\n      if (val) {\n        const defaultArr = getDefaultValue();\n        leftDate.value = defaultArr[0];\n        rightDate.value = defaultArr[1];\n      }\n    }, {\n      immediate: true\n    });\n    watch(() => props.parsedValue, newVal => {\n      if (newVal && newVal.length === 2) {\n        minDate.value = newVal[0];\n        maxDate.value = newVal[1];\n        leftDate.value = minDate.value;\n        if (props.unlinkPanels && maxDate.value) {\n          const minDateYear = minDate.value.year();\n          const maxDateYear = maxDate.value.year();\n          rightDate.value = minDateYear === maxDateYear ? maxDate.value.add(1, \"year\") : maxDate.value;\n        } else {\n          rightDate.value = leftDate.value.add(1, \"year\");\n        }\n      } else {\n        const defaultArr = getDefaultValue();\n        minDate.value = null;\n        maxDate.value = null;\n        leftDate.value = defaultArr[0];\n        rightDate.value = defaultArr[1];\n      }\n    }, {\n      immediate: true\n    });\n    return {\n      shortcuts,\n      disabledDate,\n      onSelect,\n      handleRangePick,\n      rangeState,\n      handleChangeRange,\n      minDate,\n      maxDate,\n      enableYearArrow,\n      leftLabel,\n      rightLabel,\n      leftNextYear,\n      leftPrevYear,\n      rightNextYear,\n      rightPrevYear,\n      t,\n      leftDate,\n      rightDate,\n      hasShortcuts,\n      handleShortcutClick\n    };\n  }\n});\nconst _hoisted_1 = {\n  class: \"el-picker-panel__body-wrapper\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"el-picker-panel__sidebar\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  class: \"el-picker-panel__body\"\n};\nconst _hoisted_5 = {\n  class: \"el-picker-panel__content el-date-range-picker__content is-left\"\n};\nconst _hoisted_6 = {\n  class: \"el-date-range-picker__header\"\n};\nconst _hoisted_7 = [\"disabled\"];\nconst _hoisted_8 = {\n  class: \"el-picker-panel__content el-date-range-picker__content is-right\"\n};\nconst _hoisted_9 = {\n  class: \"el-date-range-picker__header\"\n};\nconst _hoisted_10 = [\"disabled\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_d_arrow_left = resolveComponent(\"d-arrow-left\");\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_d_arrow_right = resolveComponent(\"d-arrow-right\");\n  const _component_month_table = resolveComponent(\"month-table\");\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass([\"el-picker-panel el-date-range-picker\", [{\n      \"has-sidebar\": _ctx.$slots.sidebar || _ctx.hasShortcuts\n    }]])\n  }, [createElementVNode(\"div\", _hoisted_1, [renderSlot(_ctx.$slots, \"sidebar\", {\n    class: \"el-picker-panel__sidebar\"\n  }), _ctx.hasShortcuts ? (openBlock(), createElementBlock(\"div\", _hoisted_2, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.shortcuts, (shortcut, key) => {\n    return openBlock(), createElementBlock(\"button\", {\n      key,\n      type: \"button\",\n      class: \"el-picker-panel__shortcut\",\n      onClick: $event => _ctx.handleShortcutClick(shortcut)\n    }, toDisplayString(shortcut.text), 9, _hoisted_3);\n  }), 128))])) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", _hoisted_4, [createElementVNode(\"div\", _hoisted_5, [createElementVNode(\"div\", _hoisted_6, [createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"el-picker-panel__icon-btn d-arrow-left\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.leftPrevYear && _ctx.leftPrevYear(...args))\n  }, [createVNode(_component_el_icon, null, {\n    default: withCtx(() => [createVNode(_component_d_arrow_left)]),\n    _: 1\n  })]), _ctx.unlinkPanels ? (openBlock(), createElementBlock(\"button\", {\n    key: 0,\n    type: \"button\",\n    disabled: !_ctx.enableYearArrow,\n    class: normalizeClass([{\n      \"is-disabled\": !_ctx.enableYearArrow\n    }, \"el-picker-panel__icon-btn d-arrow-right\"]),\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.leftNextYear && _ctx.leftNextYear(...args))\n  }, [createVNode(_component_el_icon, null, {\n    default: withCtx(() => [createVNode(_component_d_arrow_right)]),\n    _: 1\n  })], 10, _hoisted_7)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", null, toDisplayString(_ctx.leftLabel), 1)]), createVNode(_component_month_table, {\n    \"selection-mode\": \"range\",\n    date: _ctx.leftDate,\n    \"min-date\": _ctx.minDate,\n    \"max-date\": _ctx.maxDate,\n    \"range-state\": _ctx.rangeState,\n    \"disabled-date\": _ctx.disabledDate,\n    onChangerange: _ctx.handleChangeRange,\n    onPick: _ctx.handleRangePick,\n    onSelect: _ctx.onSelect\n  }, null, 8, [\"date\", \"min-date\", \"max-date\", \"range-state\", \"disabled-date\", \"onChangerange\", \"onPick\", \"onSelect\"])]), createElementVNode(\"div\", _hoisted_8, [createElementVNode(\"div\", _hoisted_9, [_ctx.unlinkPanels ? (openBlock(), createElementBlock(\"button\", {\n    key: 0,\n    type: \"button\",\n    disabled: !_ctx.enableYearArrow,\n    class: normalizeClass([{\n      \"is-disabled\": !_ctx.enableYearArrow\n    }, \"el-picker-panel__icon-btn d-arrow-left\"]),\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.rightPrevYear && _ctx.rightPrevYear(...args))\n  }, [createVNode(_component_el_icon, null, {\n    default: withCtx(() => [createVNode(_component_d_arrow_left)]),\n    _: 1\n  })], 10, _hoisted_10)) : createCommentVNode(\"v-if\", true), createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"el-picker-panel__icon-btn d-arrow-right\",\n    onClick: _cache[3] || (_cache[3] = (...args) => _ctx.rightNextYear && _ctx.rightNextYear(...args))\n  }, [createVNode(_component_el_icon, null, {\n    default: withCtx(() => [createVNode(_component_d_arrow_right)]),\n    _: 1\n  })]), createElementVNode(\"div\", null, toDisplayString(_ctx.rightLabel), 1)]), createVNode(_component_month_table, {\n    \"selection-mode\": \"range\",\n    date: _ctx.rightDate,\n    \"min-date\": _ctx.minDate,\n    \"max-date\": _ctx.maxDate,\n    \"range-state\": _ctx.rangeState,\n    \"disabled-date\": _ctx.disabledDate,\n    onChangerange: _ctx.handleChangeRange,\n    onPick: _ctx.handleRangePick,\n    onSelect: _ctx.onSelect\n  }, null, 8, [\"date\", \"min-date\", \"max-date\", \"range-state\", \"disabled-date\", \"onChangerange\", \"onPick\", \"onSelect\"])])])])], 2);\n}\nvar MonthRangePickPanel = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/date-picker/src/date-picker-com/panel-month-range.vue\"]]);\nexport { MonthRangePickPanel as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","components","MonthTable","ElIcon","DArrowLeft","DArrowRight","props","unlinkPanels","parsedValue","type","emits","setup","ctx","t","lang","useLocale","leftDate","ref","locale","value","hasShortcuts","computed","shortcuts","length","shortcut","shortcutValues","emit","dayjs","onClick","leftPrevYear","rightDate","rightNextYear","leftNextYear","rightPrevYear","year","rightYear","leftYear","rangeState","endDate","selecting","val","handleRangePick","minDate_","maxDate_","maxDate","minDate","close","handleConfirm","Array","valueOf","visible","isValidValue","map","_","format","getDefaultValue","defaultValue","left","right","add","start","formatToString","inject","disabledDate","pickerBase","watch","defaultArr","immediate","newVal","minDateYear","maxDateYear","onSelect","handleChangeRange","enableYearArrow","leftLabel","rightLabel","handleShortcutClick","class","_createElementBlock","_normalizeClass","sidebar","_createElementVNode","_hoisted_1","_renderSlot","_ctx","_hoisted_2","key","$event","text","_hoisted_4","_hoisted_5","_hoisted_6","_cache","_createVNode","default","disabled","date","onChangerange","onPick","_hoisted_8","_hoisted_9"],"sources":["../../../../../../../packages/components/date-picker/src/date-picker-com/panel-month-range.vue"],"sourcesContent":["<template>\n  <div\n    class=\"el-picker-panel el-date-range-picker\"\n    :class=\"[\n      {\n        'has-sidebar': $slots.sidebar || hasShortcuts,\n      },\n    ]\"\n  >\n    <div class=\"el-picker-panel__body-wrapper\">\n      <slot name=\"sidebar\" class=\"el-picker-panel__sidebar\" />\n      <div v-if=\"hasShortcuts\" class=\"el-picker-panel__sidebar\">\n        <button\n          v-for=\"(shortcut, key) in shortcuts\"\n          :key=\"key\"\n          type=\"button\"\n          class=\"el-picker-panel__shortcut\"\n          @click=\"handleShortcutClick(shortcut)\"\n        >\n          {{ shortcut.text }}\n        </button>\n      </div>\n      <div class=\"el-picker-panel__body\">\n        <div\n          class=\"el-picker-panel__content el-date-range-picker__content is-left\"\n        >\n          <div class=\"el-date-range-picker__header\">\n            <button\n              type=\"button\"\n              class=\"el-picker-panel__icon-btn d-arrow-left\"\n              @click=\"leftPrevYear\"\n            >\n              <el-icon><d-arrow-left /></el-icon>\n            </button>\n            <button\n              v-if=\"unlinkPanels\"\n              type=\"button\"\n              :disabled=\"!enableYearArrow\"\n              :class=\"{ 'is-disabled': !enableYearArrow }\"\n              class=\"el-picker-panel__icon-btn d-arrow-right\"\n              @click=\"leftNextYear\"\n            >\n              <el-icon><d-arrow-right /></el-icon>\n            </button>\n            <div>{{ leftLabel }}</div>\n          </div>\n          <month-table\n            selection-mode=\"range\"\n            :date=\"leftDate\"\n            :min-date=\"minDate\"\n            :max-date=\"maxDate\"\n            :range-state=\"rangeState\"\n            :disabled-date=\"disabledDate\"\n            @changerange=\"handleChangeRange\"\n            @pick=\"handleRangePick\"\n            @select=\"onSelect\"\n          />\n        </div>\n        <div\n          class=\"el-picker-panel__content el-date-range-picker__content is-right\"\n        >\n          <div class=\"el-date-range-picker__header\">\n            <button\n              v-if=\"unlinkPanels\"\n              type=\"button\"\n              :disabled=\"!enableYearArrow\"\n              :class=\"{ 'is-disabled': !enableYearArrow }\"\n              class=\"el-picker-panel__icon-btn d-arrow-left\"\n              @click=\"rightPrevYear\"\n            >\n              <el-icon><d-arrow-left /></el-icon>\n            </button>\n            <button\n              type=\"button\"\n              class=\"el-picker-panel__icon-btn d-arrow-right\"\n              @click=\"rightNextYear\"\n            >\n              <el-icon><d-arrow-right /></el-icon>\n            </button>\n            <div>{{ rightLabel }}</div>\n          </div>\n          <month-table\n            selection-mode=\"range\"\n            :date=\"rightDate\"\n            :min-date=\"minDate\"\n            :max-date=\"maxDate\"\n            :range-state=\"rangeState\"\n            :disabled-date=\"disabledDate\"\n            @changerange=\"handleChangeRange\"\n            @pick=\"handleRangePick\"\n            @select=\"onSelect\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, inject, ref, toRef, watch } from 'vue'\nimport dayjs from 'dayjs'\nimport ElIcon from '@element-plus/components/icon'\nimport { useLocale } from '@element-plus/hooks'\nimport { DArrowLeft, DArrowRight } from '@element-plus/icons-vue'\nimport MonthTable from './basic-month-table.vue'\n\nimport type { PropType } from 'vue'\nimport type { Dayjs } from 'dayjs'\n\nexport default defineComponent({\n  components: { MonthTable, ElIcon, DArrowLeft, DArrowRight },\n\n  props: {\n    unlinkPanels: Boolean,\n    parsedValue: {\n      type: Array as PropType<Dayjs[]>,\n    },\n  },\n\n  emits: ['pick', 'set-picker-option'],\n\n  setup(props, ctx) {\n    const { t, lang } = useLocale()\n    const leftDate = ref(dayjs().locale(lang.value))\n    const rightDate = ref(dayjs().locale(lang.value).add(1, 'year'))\n\n    const hasShortcuts = computed(() => !!shortcuts.length)\n\n    const handleShortcutClick = (shortcut) => {\n      const shortcutValues =\n        typeof shortcut.value === 'function' ? shortcut.value() : shortcut.value\n      if (shortcutValues) {\n        ctx.emit('pick', [\n          dayjs(shortcutValues[0]).locale(lang.value),\n          dayjs(shortcutValues[1]).locale(lang.value),\n        ])\n        return\n      }\n      if (shortcut.onClick) {\n        shortcut.onClick(ctx)\n      }\n    }\n\n    const leftPrevYear = () => {\n      leftDate.value = leftDate.value.subtract(1, 'year')\n      if (!props.unlinkPanels) {\n        rightDate.value = rightDate.value.subtract(1, 'year')\n      }\n    }\n\n    const rightNextYear = () => {\n      if (!props.unlinkPanels) {\n        leftDate.value = leftDate.value.add(1, 'year')\n      }\n      rightDate.value = rightDate.value.add(1, 'year')\n    }\n\n    const leftNextYear = () => {\n      leftDate.value = leftDate.value.add(1, 'year')\n    }\n\n    const rightPrevYear = () => {\n      rightDate.value = rightDate.value.subtract(1, 'year')\n    }\n    const leftLabel = computed(() => {\n      return `${leftDate.value.year()} ${t('el.datepicker.year')}`\n    })\n\n    const rightLabel = computed(() => {\n      return `${rightDate.value.year()} ${t('el.datepicker.year')}`\n    })\n\n    const leftYear = computed(() => {\n      return leftDate.value.year()\n    })\n\n    const rightYear = computed(() => {\n      return rightDate.value.year() === leftDate.value.year()\n        ? leftDate.value.year() + 1\n        : rightDate.value.year()\n    })\n\n    const enableYearArrow = computed(() => {\n      return props.unlinkPanels && rightYear.value > leftYear.value + 1\n    })\n\n    const minDate = ref(null)\n    const maxDate = ref(null)\n\n    const rangeState = ref({\n      endDate: null,\n      selecting: false,\n    })\n\n    const handleChangeRange = (val) => {\n      rangeState.value = val\n    }\n\n    const handleRangePick = (val, close = true) => {\n      // const defaultTime = props.defaultTime || []\n      // const minDate_ = modifyWithTimeString(val.minDate, defaultTime[0])\n      // const maxDate_ = modifyWithTimeString(val.maxDate, defaultTime[1])\n      // todo\n      const minDate_ = val.minDate\n      const maxDate_ = val.maxDate\n      if (maxDate.value === maxDate_ && minDate.value === minDate_) {\n        return\n      }\n      maxDate.value = maxDate_\n      minDate.value = minDate_\n\n      if (!close) return\n      handleConfirm()\n    }\n\n    const isValidValue = (value) => {\n      return (\n        Array.isArray(value) &&\n        value &&\n        value[0] &&\n        value[1] &&\n        value[0].valueOf() <= value[1].valueOf()\n      )\n    }\n\n    const handleConfirm = (visible = false) => {\n      if (isValidValue([minDate.value, maxDate.value])) {\n        ctx.emit('pick', [minDate.value, maxDate.value], visible)\n      }\n    }\n\n    const onSelect = (selecting) => {\n      rangeState.value.selecting = selecting\n      if (!selecting) {\n        rangeState.value.endDate = null\n      }\n    }\n\n    const formatToString = (value) => {\n      return value.map((_) => _.format(format))\n    }\n\n    const getDefaultValue = () => {\n      let start: Dayjs\n      if (Array.isArray(defaultValue.value)) {\n        const left = dayjs(defaultValue.value[0])\n        let right = dayjs(defaultValue.value[1])\n        if (!props.unlinkPanels) {\n          right = left.add(1, 'year')\n        }\n        return [left, right]\n      } else if (defaultValue.value) {\n        start = dayjs(defaultValue.value)\n      } else {\n        start = dayjs()\n      }\n      start = start.locale(lang.value)\n      return [start, start.add(1, 'year')]\n    }\n\n    // pickerBase.hub.emit('SetPickerOption', ['isValidValue', isValidValue])\n    ctx.emit('set-picker-option', ['formatToString', formatToString])\n    const pickerBase = inject('EP_PICKER_BASE') as any\n    const { shortcuts, disabledDate, format } = pickerBase.props\n    const defaultValue = toRef(pickerBase.props, 'defaultValue')\n\n    watch(\n      () => defaultValue.value,\n      (val) => {\n        if (val) {\n          const defaultArr = getDefaultValue()\n          leftDate.value = defaultArr[0]\n          rightDate.value = defaultArr[1]\n        }\n      },\n      { immediate: true }\n    )\n\n    watch(\n      () => props.parsedValue,\n      (newVal) => {\n        if (newVal && newVal.length === 2) {\n          minDate.value = newVal[0]\n          maxDate.value = newVal[1]\n          leftDate.value = minDate.value\n          if (props.unlinkPanels && maxDate.value) {\n            const minDateYear = minDate.value.year()\n            const maxDateYear = maxDate.value.year()\n            rightDate.value =\n              minDateYear === maxDateYear\n                ? maxDate.value.add(1, 'year')\n                : maxDate.value\n          } else {\n            rightDate.value = leftDate.value.add(1, 'year')\n          }\n        } else {\n          const defaultArr = getDefaultValue()\n          minDate.value = null\n          maxDate.value = null\n          leftDate.value = defaultArr[0]\n          rightDate.value = defaultArr[1]\n        }\n      },\n      { immediate: true }\n    )\n\n    return {\n      shortcuts,\n      disabledDate,\n      onSelect,\n      handleRangePick,\n      rangeState,\n      handleChangeRange,\n      minDate,\n      maxDate,\n      enableYearArrow,\n      leftLabel,\n      rightLabel,\n      leftNextYear,\n      leftPrevYear,\n      rightNextYear,\n      rightPrevYear,\n      t,\n      leftDate,\n      rightDate,\n      hasShortcuts,\n      handleShortcutClick,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}