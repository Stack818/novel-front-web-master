{"ast":null,"code":"import { defineComponent, computed, openBlock, createElementBlock, normalizeClass, createElementVNode, renderSlot, createBlock, resolveDynamicComponent, createCommentVNode, toDisplayString } from 'vue';\nimport '../../../hooks/index2.mjs';\nimport { resultProps, IconMap, IconComponentMap } from './result3.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index2.mjs';\nconst COMPONENT_NAME = \"ElResult\";\nconst _sfc_main = defineComponent({\n  name: COMPONENT_NAME,\n  props: resultProps,\n  setup(props) {\n    const ns = useNamespace(\"result\");\n    const resultIcon = computed(() => {\n      const icon = props.icon;\n      const iconClass = icon && IconMap[icon] ? IconMap[icon] : \"icon-info\";\n      const iconComponent = IconComponentMap[iconClass] || IconComponentMap[\"icon-info\"];\n      return {\n        class: iconClass,\n        component: iconComponent\n      };\n    });\n    return {\n      ns,\n      resultIcon\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass(_ctx.ns.b())\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.ns.e(\"icon\"))\n  }, [renderSlot(_ctx.$slots, \"icon\", {}, () => [_ctx.resultIcon.component ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.resultIcon.component), {\n    key: 0,\n    class: normalizeClass(_ctx.resultIcon.class)\n  }, null, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)])], 2), _ctx.title || _ctx.$slots.title ? (openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    class: normalizeClass(_ctx.ns.e(\"title\"))\n  }, [renderSlot(_ctx.$slots, \"title\", {}, () => [createElementVNode(\"p\", null, toDisplayString(_ctx.title), 1)])], 2)) : createCommentVNode(\"v-if\", true), _ctx.subTitle || _ctx.$slots[\"sub-title\"] ? (openBlock(), createElementBlock(\"div\", {\n    key: 1,\n    class: normalizeClass(_ctx.ns.e(\"subtitle\"))\n  }, [renderSlot(_ctx.$slots, \"sub-title\", {}, () => [createElementVNode(\"p\", null, toDisplayString(_ctx.subTitle), 1)])], 2)) : createCommentVNode(\"v-if\", true), _ctx.$slots.extra ? (openBlock(), createElementBlock(\"div\", {\n    key: 2,\n    class: normalizeClass(_ctx.ns.e(\"extra\"))\n  }, [renderSlot(_ctx.$slots, \"extra\")], 2)) : createCommentVNode(\"v-if\", true)], 2);\n}\nvar Result = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/result/src/result.vue\"]]);\nexport { Result as default };","map":{"version":3,"mappings":";;;;;AA8BA,MAAMA,cAAiB;AACvB,MAAKC,YAAaC,eAAa;EAC7BC,IAAM;EACNC,KAAO;EACPC,MAAMD,KAAO;IACL,WAAKE,aAAa,QAAQ;IAE1B,mBAAaC,SAAS,MAAM;MAChC,MAAMC,OAAOJ,KAAM;MACnB,MAAMK,SAAY,WAAQC,OAAQ,SAAQA,QAAQF,IAAQ;MACpD,sBACJG,gBAAiB,eAAcA,gBAAiB;MAE3C;QACLC,KAAO;QACPC,SAAW;MAAA,CACb;IAAA,CACD;IAEM;MACLC;MACAC;IAAA,CACF;EAAA;AAEJ,CAAC;;sBArDCC,kBAuBM;IAvBAJ,OAAKK,cAAE,SAAGC,CAAC;EAAA,IACfC,kBAQM;IARAP,OAAKK,cAAE,SAAGG,CAAC;EAAA,IACfC,WAMOC,yBANP,MAMO,CAHGA,IAAW,sCAFnBC,WAIE,yBAHKD,gBAAWT,SAAS;IAAAW;IAExBZ,KAAK,iBAAEU,gBAAWV,KAAK;EAAA,mEAInBU,IAAS,sBAAOG,sBAA3BT,kBAIM;IAAAQ;IAJ6BZ,KAAK,iBAAEU,QAAGF,CAAC;EAAA,IAC5CC,WAEOC,0BAFP,MAEO,CADLH,mBAAkB,2BAAZG,IAAK,wDAGJA,IAAY,yBAAM,6BAA7BN,kBAIM;IAAAQ;IAJuCZ,KAAK,iBAAEU,QAAGF,CAAC;EAAA,IACtDC,WAEOC,8BAFP,MAEO,CADLH,mBAAqB,2BAAfG,IAAQ,2DAGPA,YAAOI,sBAAlBV,kBAEM;IAAAQ;IAFoBZ,KAAK,iBAAEU,QAAGF,CAAC;EAAA,IACnCC,UAAqB","names":["COMPONENT_NAME","_sfc_main","defineComponent","name","props","setup","useNamespace","computed","icon","iconClass","IconMap","IconComponentMap","class","component","ns","resultIcon","_createElementBlock","_normalizeClass","b","_createElementVNode","e","_renderSlot","_ctx","_createBlock","key","title","extra"],"sources":["../../../../../../packages/components/result/src/result.vue"],"sourcesContent":["<template>\n  <div :class=\"ns.b()\">\n    <div :class=\"ns.e('icon')\">\n      <slot name=\"icon\">\n        <component\n          :is=\"resultIcon.component\"\n          v-if=\"resultIcon.component\"\n          :class=\"resultIcon.class\"\n        />\n      </slot>\n    </div>\n    <div v-if=\"title || $slots.title\" :class=\"ns.e('title')\">\n      <slot name=\"title\">\n        <p>{{ title }}</p>\n      </slot>\n    </div>\n    <div v-if=\"subTitle || $slots['sub-title']\" :class=\"ns.e('subtitle')\">\n      <slot name=\"sub-title\">\n        <p>{{ subTitle }}</p>\n      </slot>\n    </div>\n    <div v-if=\"$slots.extra\" :class=\"ns.e('extra')\">\n      <slot name=\"extra\" />\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { IconComponentMap, IconMap, resultProps } from './result'\nconst COMPONENT_NAME = 'ElResult'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  props: resultProps,\n  setup(props) {\n    const ns = useNamespace('result')\n\n    const resultIcon = computed(() => {\n      const icon = props.icon\n      const iconClass = icon && IconMap[icon] ? IconMap[icon] : 'icon-info'\n      const iconComponent =\n        IconComponentMap[iconClass] || IconComponentMap['icon-info']\n\n      return {\n        class: iconClass,\n        component: iconComponent,\n      }\n    })\n\n    return {\n      ns,\n      resultIcon,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}