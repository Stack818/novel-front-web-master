{"ast":null,"code":"import { isVNode, createVNode } from 'vue';\nimport '../components/index2.mjs';\nimport { tryCall } from '../utils2.mjs';\nimport TableV2HeaderRow from '../components/header-row.mjs';\nfunction _isSlot(s) {\n  return typeof s === \"function\" || Object.prototype.toString.call(s) === \"[object Object]\" && !isVNode(s);\n}\nconst HeaderRenderer = ({\n  columns,\n  columnsStyles,\n  headerIndex,\n  style,\n  headerClass,\n  headerProps,\n  ns\n}, {\n  slots\n}) => {\n  const param = {\n    columns,\n    headerIndex\n  };\n  const kls = [ns.e(\"header-row\"), tryCall(headerClass, param, \"\"), {\n    [ns.is(\"customized\")]: Boolean(slots.header)\n  }];\n  const extraProps = {\n    ...tryCall(headerProps, param),\n    columnsStyles,\n    class: kls,\n    columns,\n    headerIndex,\n    style\n  };\n  return createVNode(TableV2HeaderRow, extraProps, _isSlot(slots) ? slots : {\n    default: () => [slots]\n  });\n};\nexport { HeaderRenderer as default };","map":{"version":3,"mappings":";;;;;;;;;EAaMA;EAEFC,WADF;EAEEC,KAFF;EAGEC,WAHF;EAIEC,WAJF;EAKEC;AACAC,GANF;EAOEC;AAEAF;EAEF;IAAEG;IACCL;EACH;EAAgBF,MAAFQ;IAAWN;EAAX,CAAd;EAEA,MAAMM,UACDC,GAAH;IAGE;IACCL,aAAM;IALXM;IASMC;IAEJV,WAFiB;IAGjBS;EACAV;EACAE,OALiBU;IAMjBT;EANiB,CAAnB;AASA","names":["HeaderRenderer","columns","columnsStyles","headerIndex","style","ns","headerClass","headerProps","slots","kls","e","class","extraProps","_createVNode"],"sources":["../../../../../../../packages/components/table-v2/src/renderers/header.tsx"],"sourcesContent":["import { HeaderRow } from '../components'\nimport { tryCall } from '../utils'\n\nimport type { FunctionalComponent } from 'vue'\nimport type { UseNamespaceReturn } from '@element-plus/hooks'\nimport type { TableV2HeaderRendererParams } from '../components'\nimport type { TableV2Props } from '../table'\n\ntype HeaderRendererProps = TableV2HeaderRendererParams &\n  Pick<TableV2Props, 'headerClass' | 'headerProps'> & {\n    ns: UseNamespaceReturn\n  }\n\nconst HeaderRenderer: FunctionalComponent<HeaderRendererProps> = (\n  {\n    columns,\n    columnsStyles,\n    headerIndex,\n    style,\n    // derived from root\n    headerClass,\n    headerProps,\n\n    ns,\n  },\n  { slots }\n) => {\n  const param = { columns, headerIndex }\n\n  const kls = [\n    ns.e('header-row'),\n    tryCall(headerClass, param, ''),\n    {\n      // [ns.is('resizing')]: Boolean(resizingKey),\n      [ns.is('customized')]: Boolean(slots.header),\n    },\n  ]\n\n  const extraProps = {\n    ...tryCall(headerProps, param),\n    columnsStyles,\n    class: kls,\n    columns,\n    headerIndex,\n    style,\n  }\n\n  return <HeaderRow {...extraProps}>{slots}</HeaderRow>\n}\n\nexport default HeaderRenderer\n"]},"metadata":{},"sourceType":"module"}