{"ast":null,"code":"import { onBeforeMount } from 'vue';\nimport { isClient } from '@vueuse/core';\nimport '../../utils/index2.mjs';\nimport { generateId } from '../../utils/rand2.mjs';\nlet cachedContainer;\nconst POPPER_CONTAINER_ID = `el-popper-container-${generateId()}`;\nconst POPPER_CONTAINER_SELECTOR = `#${POPPER_CONTAINER_ID}`;\nconst createContainer = () => {\n  const container = document.createElement(\"div\");\n  container.id = POPPER_CONTAINER_ID;\n  document.body.appendChild(container);\n  return container;\n};\nconst usePopperContainer = () => {\n  onBeforeMount(() => {\n    if (!isClient) return;\n    if (process.env.NODE_ENV === \"test\" || !cachedContainer || !document.body.querySelector(POPPER_CONTAINER_SELECTOR)) {\n      cachedContainer = createContainer();\n    }\n  });\n};\nexport { POPPER_CONTAINER_ID, POPPER_CONTAINER_SELECTOR, usePopperContainer };","map":{"version":3,"mappings":";;;;AAGA,IAAIA,eAAe;AACP,MAACC,mBAAmB,GAAI,uBAAsBC,UAAU,EAAG;AAC3D,MAACC,yBAAyB,GAAI,IAAGF,mBAAoB;AACjE,MAAMG,eAAe,GAAGA,MAAM;EAC5B,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC/CF,SAAS,CAACG,EAAE,GAAGP,mBAAmB;EAClCK,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,SAAS,CAAC;EACpC,OAAOA,SAAS;AAClB,CAAC;AACW,MAACM,kBAAkB,GAAGA,MAAM;EACtCC,aAAa,CAAC,MAAM;IAClB,IAAI,CAACC,QAAQ,EACX;IACF,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,MAAM,IAAI,CAAChB,eAAe,IAAI,CAACM,QAAQ,CAACG,IAAI,CAACQ,aAAa,CAACd,yBAAyB,CAAC,EAAE;MAClHH,eAAe,GAAGI,eAAe,EAAE;IACzC;EACA,CAAG,CAAC;AACJ","names":["cachedContainer","POPPER_CONTAINER_ID","generateId","POPPER_CONTAINER_SELECTOR","createContainer","container","document","createElement","id","body","appendChild","usePopperContainer","onBeforeMount","isClient","process","env","NODE_ENV","querySelector"],"sources":["../../../../../packages/hooks/use-popper-container/index.ts"],"sourcesContent":["import { onBeforeMount } from 'vue'\nimport { isClient } from '@vueuse/core'\nimport { generateId } from '@element-plus/utils'\n\nlet cachedContainer: HTMLElement\n\nexport const POPPER_CONTAINER_ID = `el-popper-container-${generateId()}`\n\nexport const POPPER_CONTAINER_SELECTOR = `#${POPPER_CONTAINER_ID}`\n\nconst createContainer = () => {\n  const container = document.createElement('div')\n  container.id = POPPER_CONTAINER_ID\n  document.body.appendChild(container)\n  return container\n}\n\nexport const usePopperContainer = () => {\n  onBeforeMount(() => {\n    if (!isClient) return\n\n    // This is for bypassing the error that when under testing env, we often encounter\n    // document.body.innerHTML = '' situation\n    // for this we need to disable the caching since it's not really needed\n    if (\n      process.env.NODE_ENV === 'test' ||\n      !cachedContainer ||\n      !document.body.querySelector(POPPER_CONTAINER_SELECTOR)\n    ) {\n      cachedContainer = createContainer()\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}