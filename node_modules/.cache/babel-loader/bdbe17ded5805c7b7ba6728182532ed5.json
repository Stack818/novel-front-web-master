{"ast":null,"code":"import { ref, computed, inject, nextTick, watch } from 'vue';\nimport { debounce } from 'lodash-unified';\nimport '../../../constants/index2.mjs';\nimport { EVENT_CODE } from '../../../constants/aria2.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event2.mjs';\nconst {\n  left,\n  down,\n  right,\n  up,\n  home,\n  end,\n  pageUp,\n  pageDown\n} = EVENT_CODE;\nconst useTooltip = (props, formatTooltip, showTooltip) => {\n  const tooltip = ref();\n  const tooltipVisible = ref(false);\n  const enableFormat = computed(() => {\n    return formatTooltip.value instanceof Function;\n  });\n  const formatValue = computed(() => {\n    return enableFormat.value && formatTooltip.value(props.modelValue) || props.modelValue;\n  });\n  const displayTooltip = debounce(() => {\n    showTooltip.value && (tooltipVisible.value = true);\n  }, 50);\n  const hideTooltip = debounce(() => {\n    showTooltip.value && (tooltipVisible.value = false);\n  }, 50);\n  return {\n    tooltip,\n    tooltipVisible,\n    formatValue,\n    displayTooltip,\n    hideTooltip\n  };\n};\nconst useSliderButton = (props, initData, emit) => {\n  const {\n    disabled,\n    min,\n    max,\n    step,\n    showTooltip,\n    precision,\n    sliderSize,\n    formatTooltip,\n    emitChange,\n    resetSize,\n    updateDragging\n  } = inject(\"SliderProvider\");\n  const {\n    tooltip,\n    tooltipVisible,\n    formatValue,\n    displayTooltip,\n    hideTooltip\n  } = useTooltip(props, formatTooltip, showTooltip);\n  const button = ref();\n  const currentPosition = computed(() => {\n    return `${(props.modelValue - min.value) / (max.value - min.value) * 100}%`;\n  });\n  const wrapperStyle = computed(() => {\n    return props.vertical ? {\n      bottom: currentPosition.value\n    } : {\n      left: currentPosition.value\n    };\n  });\n  const handleMouseEnter = () => {\n    initData.hovering = true;\n    displayTooltip();\n  };\n  const handleMouseLeave = () => {\n    initData.hovering = false;\n    if (!initData.dragging) {\n      hideTooltip();\n    }\n  };\n  const onButtonDown = event => {\n    if (disabled.value) return;\n    event.preventDefault();\n    onDragStart(event);\n    window.addEventListener(\"mousemove\", onDragging);\n    window.addEventListener(\"touchmove\", onDragging);\n    window.addEventListener(\"mouseup\", onDragEnd);\n    window.addEventListener(\"touchend\", onDragEnd);\n    window.addEventListener(\"contextmenu\", onDragEnd);\n    button.value.focus();\n  };\n  const incrementPosition = amount => {\n    if (disabled.value) return;\n    initData.newPosition = Number.parseFloat(currentPosition.value) + amount / (max.value - min.value) * 100;\n    setPosition(initData.newPosition);\n    emitChange();\n  };\n  const onLeftKeyDown = () => {\n    incrementPosition(-step.value);\n  };\n  const onRightKeyDown = () => {\n    incrementPosition(step.value);\n  };\n  const onPageDownKeyDown = () => {\n    incrementPosition(-step.value * 4);\n  };\n  const onPageUpKeyDown = () => {\n    incrementPosition(step.value * 4);\n  };\n  const onHomeKeyDown = () => {\n    if (disabled.value) return;\n    setPosition(0);\n    emitChange();\n  };\n  const onEndKeyDown = () => {\n    if (disabled.value) return;\n    setPosition(100);\n    emitChange();\n  };\n  const onKeyDown = event => {\n    let isPreventDefault = true;\n    if ([left, down].includes(event.key)) {\n      onLeftKeyDown();\n    } else if ([right, up].includes(event.key)) {\n      onRightKeyDown();\n    } else if (event.key === home) {\n      onHomeKeyDown();\n    } else if (event.key === end) {\n      onEndKeyDown();\n    } else if (event.key === pageDown) {\n      onPageDownKeyDown();\n    } else if (event.key === pageUp) {\n      onPageUpKeyDown();\n    } else {\n      isPreventDefault = false;\n    }\n    isPreventDefault && event.preventDefault();\n  };\n  const getClientXY = event => {\n    let clientX;\n    let clientY;\n    if (event.type.startsWith(\"touch\")) {\n      clientY = event.touches[0].clientY;\n      clientX = event.touches[0].clientX;\n    } else {\n      clientY = event.clientY;\n      clientX = event.clientX;\n    }\n    return {\n      clientX,\n      clientY\n    };\n  };\n  const onDragStart = event => {\n    initData.dragging = true;\n    initData.isClick = true;\n    const {\n      clientX,\n      clientY\n    } = getClientXY(event);\n    if (props.vertical) {\n      initData.startY = clientY;\n    } else {\n      initData.startX = clientX;\n    }\n    initData.startPosition = Number.parseFloat(currentPosition.value);\n    initData.newPosition = initData.startPosition;\n  };\n  const onDragging = event => {\n    if (initData.dragging) {\n      initData.isClick = false;\n      displayTooltip();\n      resetSize();\n      let diff;\n      const {\n        clientX,\n        clientY\n      } = getClientXY(event);\n      if (props.vertical) {\n        initData.currentY = clientY;\n        diff = (initData.startY - initData.currentY) / sliderSize.value * 100;\n      } else {\n        initData.currentX = clientX;\n        diff = (initData.currentX - initData.startX) / sliderSize.value * 100;\n      }\n      initData.newPosition = initData.startPosition + diff;\n      setPosition(initData.newPosition);\n    }\n  };\n  const onDragEnd = () => {\n    if (initData.dragging) {\n      setTimeout(() => {\n        initData.dragging = false;\n        if (!initData.hovering) {\n          hideTooltip();\n        }\n        if (!initData.isClick) {\n          setPosition(initData.newPosition);\n          emitChange();\n        }\n      }, 0);\n      window.removeEventListener(\"mousemove\", onDragging);\n      window.removeEventListener(\"touchmove\", onDragging);\n      window.removeEventListener(\"mouseup\", onDragEnd);\n      window.removeEventListener(\"touchend\", onDragEnd);\n      window.removeEventListener(\"contextmenu\", onDragEnd);\n    }\n  };\n  const setPosition = async newPosition => {\n    if (newPosition === null || Number.isNaN(+newPosition)) return;\n    if (newPosition < 0) {\n      newPosition = 0;\n    } else if (newPosition > 100) {\n      newPosition = 100;\n    }\n    const lengthPerStep = 100 / ((max.value - min.value) / step.value);\n    const steps = Math.round(newPosition / lengthPerStep);\n    let value = steps * lengthPerStep * (max.value - min.value) * 0.01 + min.value;\n    value = Number.parseFloat(value.toFixed(precision.value));\n    emit(UPDATE_MODEL_EVENT, value);\n    if (!initData.dragging && props.modelValue !== initData.oldValue) {\n      initData.oldValue = props.modelValue;\n    }\n    await nextTick();\n    initData.dragging && displayTooltip();\n    tooltip.value.updatePopper();\n  };\n  watch(() => initData.dragging, val => {\n    updateDragging(val);\n  });\n  return {\n    button,\n    tooltip,\n    tooltipVisible,\n    showTooltip,\n    wrapperStyle,\n    formatValue,\n    handleMouseEnter,\n    handleMouseLeave,\n    onButtonDown,\n    onKeyDown,\n    setPosition\n  };\n};\nexport { useSliderButton };","map":{"version":3,"mappings":"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","names":["left","down","right","up","home","end","pageUp","pageDown","EVENT_CODE","useTooltip","props","formatTooltip","showTooltip","tooltip","ref","tooltipVisible","enableFormat","computed","value","Function","formatValue","modelValue","displayTooltip","debounce","hideTooltip","useSliderButton","initData","emit","disabled","min","max","step","precision","sliderSize","emitChange","resetSize","updateDragging","inject","button","currentPosition","wrapperStyle","vertical","bottom","handleMouseEnter","hovering","handleMouseLeave","dragging","onButtonDown","event","preventDefault","onDragStart","window","addEventListener","onDragging","onDragEnd","focus","incrementPosition","amount","newPosition","Number","parseFloat","setPosition","onLeftKeyDown","onRightKeyDown","onPageDownKeyDown","onPageUpKeyDown","onHomeKeyDown","onEndKeyDown","onKeyDown","isPreventDefault","includes","key","getClientXY","clientX","clientY","type","startsWith","touches","isClick","startY","startX","startPosition","diff","currentY","currentX","setTimeout","removeEventListener","isNaN","lengthPerStep","steps","Math","round","toFixed","UPDATE_MODEL_EVENT","oldValue","nextTick","updatePopper","watch","val"],"sources":["../../../../../../packages/components/slider/src/useSliderButton.ts"],"sourcesContent":["import { computed, inject, nextTick, ref, watch } from 'vue'\nimport { debounce } from 'lodash-unified'\nimport { EVENT_CODE, UPDATE_MODEL_EVENT } from '@element-plus/constants'\n\nimport type { CSSProperties, ComponentInternalInstance, ComputedRef } from 'vue'\nimport type {\n  ISliderButtonInitData,\n  ISliderButtonProps,\n  ISliderProvider,\n} from './slider.type'\n\nconst { left, down, right, up, home, end, pageUp, pageDown } = EVENT_CODE\n\nconst useTooltip = (\n  props: ISliderButtonProps,\n  formatTooltip: ComputedRef<(value: number) => number | string>,\n  showTooltip: ComputedRef<boolean>\n) => {\n  const tooltip = ref<any>()\n\n  const tooltipVisible = ref(false)\n\n  const enableFormat = computed(() => {\n    return formatTooltip.value instanceof Function\n  })\n\n  const formatValue = computed(() => {\n    return (\n      (enableFormat.value && formatTooltip.value(props.modelValue)) ||\n      props.modelValue\n    )\n  })\n\n  const displayTooltip = debounce(() => {\n    showTooltip.value && (tooltipVisible.value = true)\n  }, 50)\n\n  const hideTooltip = debounce(() => {\n    showTooltip.value && (tooltipVisible.value = false)\n  }, 50)\n\n  return {\n    tooltip,\n    tooltipVisible,\n    formatValue,\n    displayTooltip,\n    hideTooltip,\n  }\n}\n\nexport const useSliderButton = (\n  props: ISliderButtonProps,\n  initData: ISliderButtonInitData,\n  emit: ComponentInternalInstance['emit']\n) => {\n  const {\n    disabled,\n    min,\n    max,\n    step,\n    showTooltip,\n    precision,\n    sliderSize,\n    formatTooltip,\n    emitChange,\n    resetSize,\n    updateDragging,\n  } = inject<ISliderProvider>('SliderProvider')!\n\n  const { tooltip, tooltipVisible, formatValue, displayTooltip, hideTooltip } =\n    useTooltip(props, formatTooltip, showTooltip)\n\n  const button = ref<any>()\n\n  const currentPosition = computed(() => {\n    return `${\n      ((props.modelValue - min.value) / (max.value - min.value)) * 100\n    }%`\n  })\n\n  const wrapperStyle = computed(() => {\n    return (\n      props.vertical\n        ? { bottom: currentPosition.value }\n        : { left: currentPosition.value }\n    ) as CSSProperties\n  })\n\n  const handleMouseEnter = () => {\n    initData.hovering = true\n    displayTooltip()\n  }\n\n  const handleMouseLeave = () => {\n    initData.hovering = false\n    if (!initData.dragging) {\n      hideTooltip()\n    }\n  }\n\n  const onButtonDown = (event: MouseEvent | TouchEvent) => {\n    if (disabled.value) return\n    event.preventDefault()\n    onDragStart(event)\n    window.addEventListener('mousemove', onDragging)\n    window.addEventListener('touchmove', onDragging)\n    window.addEventListener('mouseup', onDragEnd)\n    window.addEventListener('touchend', onDragEnd)\n    window.addEventListener('contextmenu', onDragEnd)\n    button.value.focus()\n  }\n\n  const incrementPosition = (amount: number) => {\n    if (disabled.value) return\n    initData.newPosition =\n      Number.parseFloat(currentPosition.value) +\n      (amount / (max.value - min.value)) * 100\n    setPosition(initData.newPosition)\n    emitChange()\n  }\n\n  const onLeftKeyDown = () => {\n    incrementPosition(-step.value)\n  }\n\n  const onRightKeyDown = () => {\n    incrementPosition(step.value)\n  }\n\n  const onPageDownKeyDown = () => {\n    incrementPosition(-step.value * 4)\n  }\n\n  const onPageUpKeyDown = () => {\n    incrementPosition(step.value * 4)\n  }\n\n  const onHomeKeyDown = () => {\n    if (disabled.value) return\n    setPosition(0)\n    emitChange()\n  }\n\n  const onEndKeyDown = () => {\n    if (disabled.value) return\n    setPosition(100)\n    emitChange()\n  }\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    let isPreventDefault = true\n    if ([left, down].includes(event.key)) {\n      onLeftKeyDown()\n    } else if ([right, up].includes(event.key)) {\n      onRightKeyDown()\n    } else if (event.key === home) {\n      onHomeKeyDown()\n    } else if (event.key === end) {\n      onEndKeyDown()\n    } else if (event.key === pageDown) {\n      onPageDownKeyDown()\n    } else if (event.key === pageUp) {\n      onPageUpKeyDown()\n    } else {\n      isPreventDefault = false\n    }\n    isPreventDefault && event.preventDefault()\n  }\n\n  const getClientXY = (event: MouseEvent | TouchEvent) => {\n    let clientX: number\n    let clientY: number\n    if (event.type.startsWith('touch')) {\n      clientY = (event as TouchEvent).touches[0].clientY\n      clientX = (event as TouchEvent).touches[0].clientX\n    } else {\n      clientY = (event as MouseEvent).clientY\n      clientX = (event as MouseEvent).clientX\n    }\n    return {\n      clientX,\n      clientY,\n    }\n  }\n\n  const onDragStart = (event: MouseEvent | TouchEvent) => {\n    initData.dragging = true\n    initData.isClick = true\n    const { clientX, clientY } = getClientXY(event)\n    if (props.vertical) {\n      initData.startY = clientY\n    } else {\n      initData.startX = clientX\n    }\n    initData.startPosition = Number.parseFloat(currentPosition.value)\n    initData.newPosition = initData.startPosition\n  }\n\n  const onDragging = (event: MouseEvent | TouchEvent) => {\n    if (initData.dragging) {\n      initData.isClick = false\n      displayTooltip()\n      resetSize()\n      let diff: number\n      const { clientX, clientY } = getClientXY(event)\n      if (props.vertical) {\n        initData.currentY = clientY\n        diff = ((initData.startY - initData.currentY) / sliderSize.value) * 100\n      } else {\n        initData.currentX = clientX\n        diff = ((initData.currentX - initData.startX) / sliderSize.value) * 100\n      }\n      initData.newPosition = initData.startPosition + diff\n      setPosition(initData.newPosition)\n    }\n  }\n\n  const onDragEnd = () => {\n    if (initData.dragging) {\n      /*\n       * 防止在 mouseup 后立即触发 click，导致滑块有几率产生一小段位移\n       * 不使用 preventDefault 是因为 mouseup 和 click 没有注册在同一个 DOM 上\n       */\n      setTimeout(() => {\n        initData.dragging = false\n        if (!initData.hovering) {\n          hideTooltip()\n        }\n        if (!initData.isClick) {\n          setPosition(initData.newPosition)\n          emitChange()\n        }\n      }, 0)\n      window.removeEventListener('mousemove', onDragging)\n      window.removeEventListener('touchmove', onDragging)\n      window.removeEventListener('mouseup', onDragEnd)\n      window.removeEventListener('touchend', onDragEnd)\n      window.removeEventListener('contextmenu', onDragEnd)\n    }\n  }\n\n  const setPosition = async (newPosition: number) => {\n    if (newPosition === null || Number.isNaN(+newPosition)) return\n    if (newPosition < 0) {\n      newPosition = 0\n    } else if (newPosition > 100) {\n      newPosition = 100\n    }\n    const lengthPerStep = 100 / ((max.value - min.value) / step.value)\n    const steps = Math.round(newPosition / lengthPerStep)\n    let value =\n      steps * lengthPerStep * (max.value - min.value) * 0.01 + min.value\n    value = Number.parseFloat(value.toFixed(precision.value))\n    emit(UPDATE_MODEL_EVENT, value)\n\n    if (!initData.dragging && props.modelValue !== initData.oldValue) {\n      initData.oldValue = props.modelValue\n    }\n\n    await nextTick()\n    initData.dragging && displayTooltip()\n    tooltip.value.updatePopper()\n  }\n\n  watch(\n    () => initData.dragging,\n    (val) => {\n      updateDragging(val)\n    }\n  )\n\n  return {\n    button,\n    tooltip,\n    tooltipVisible,\n    showTooltip,\n    wrapperStyle,\n    formatValue,\n    handleMouseEnter,\n    handleMouseLeave,\n    onButtonDown,\n    onKeyDown,\n    setPosition,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}