{"ast":null,"code":"import { reactive, toRefs, onMounted } from \"vue\";\nimport { useRouter, useRoute } from \"vue-router\";\nimport { getToken } from \"@/utils/auth\";\nimport { getAuthorStatus } from \"@/api/author\";\nexport default {\n  name: \"Navbar\",\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const goAuthor = async () => {\n      if (!getToken()) {\n        router.push({\n          name: \"login\"\n        });\n        return;\n      }\n      const {\n        data\n      } = await getAuthorStatus();\n      if (data === null) {\n        router.push({\n          name: \"authorRegister\"\n        });\n        return;\n      }\n      let routeUrl = router.resolve({\n        name: \"authorBookList\"\n      });\n      window.open(routeUrl.href, \"_blank\");\n    };\n    return {\n      goAuthor\n    };\n  }\n};","map":{"version":3,"mappings":"AAiBA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,SAAQ,QAAS,KAAK;AACjD,SAASC,SAAS,EAAEC,QAAO,QAAS,YAAY;AAChD,SAASC,QAAQ,QAAO,cAAc;AACtC,SAAQC,eAAe,QAAO,cAAa;AAC3C,eAAe;EACbC,IAAI,EAAE,QAAQ;EACdC,KAAKA,GAAG;IACN,MAAMC,KAAI,GAAIL,QAAQ,CAAC,CAAC;IACxB,MAAMM,MAAK,GAAIP,SAAS,CAAC,CAAC;IAC1B,MAAMQ,QAAO,GAAI,YAAY;MAC3B,IAAI,CAACN,QAAQ,CAAC,CAAC,EAAE;QACfK,MAAM,CAACE,IAAI,CAAC;UACVL,IAAI,EAAE;QACR,CAAC,CAAC;QACF;MACF;MAEA,MAAM;QAACM;MAAI,IAAI,MAAMP,eAAe,CAAC,CAAC;MACtC,IAAGO,IAAG,KAAM,IAAI,EAAC;QACbH,MAAM,CAACE,IAAI,CAAC;UACZL,IAAI,EAAE;QACR,CAAC,CAAC;QACF;MACF;MAEA,IAAIO,QAAO,GAAIJ,MAAM,CAACK,OAAO,CAAC;QAC5BR,IAAI,EAAE;MACR,CAAC,CAAC;MACFS,MAAM,CAACC,IAAI,CAACH,QAAQ,CAACI,IAAI,EAAE,QAAQ,CAAC;IACtC,CAAC;IACD,OAAO;MACLP;IACF,CAAC;EACH;AACF,CAAC","names":["reactive","toRefs","onMounted","useRouter","useRoute","getToken","getAuthorStatus","name","setup","route","router","goAuthor","push","data","routeUrl","resolve","window","open","href"],"sourceRoot":"","sources":["D:\\desktop\\小说精品屋\\novel-front-web-master\\novel-front-web-master\\src\\components\\common\\Navbar.vue"],"sourcesContent":[" <template>\n  <div class=\"mainNav\" id=\"mainNav\">\n    <div class=\"box_center cf\">\n      <ul class=\"nav\" id=\"navModule\">\n        <li><router-link :to=\"{ name: 'home' }\">首页</router-link></li>\n        <li>\n          <router-link :to=\"{ name: 'bookclass' }\"> 全部作品 </router-link>\n        </li>\n        <li><router-link :to=\"{ name: 'bookRank' }\">排行榜</router-link></li>\n        <!--<li class=\"\"><a href=\"/pay/index.html\">充值</a></li>-->\n        <li><a @click=\"goAuthor\" href=\"javascript:void(0)\">作家专区</a></li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { reactive, toRefs, onMounted } from \"vue\";\nimport { useRouter, useRoute } from \"vue-router\";\nimport { getToken} from \"@/utils/auth\";\nimport {getAuthorStatus} from \"@/api/author\"\nexport default {\n  name: \"Navbar\",\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const goAuthor = async () => {\n      if (!getToken()) {\n        router.push({\n          name: \"login\",\n        });\n        return;\n      }\n\n      const {data} = await getAuthorStatus();\n      if(data === null){\n          router.push({\n          name: \"authorRegister\",\n        });\n        return;\n      }\n\n      let routeUrl = router.resolve({\n        name: \"authorBookList\",\n      });\n      window.open(routeUrl.href, \"_blank\");\n    };\n    return {\n      goAuthor,\n    };\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}