{"ast":null,"code":"import \"@/assets/styles/book.css\";\nimport { reactive, toRefs, onMounted, ref } from \"vue\";\nimport { useRouter, useRoute } from \"vue-router\";\nimport { listVisitRankBooks, listUpdateRankBooks, listNewestRankBooks } from \"@/api/book\";\nimport Header from \"@/components/common/Header\";\nimport Footer from \"@/components/common/Footer\";\nexport default {\n  name: \"bookRank\",\n  components: {\n    Header,\n    Footer\n  },\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const state = reactive({\n      books: [],\n      rankName: \"点击榜\",\n      rankType: 1\n    });\n    onMounted(() => {\n      visitRank();\n    });\n    const visitRank = async () => {\n      const {\n        data\n      } = await listVisitRankBooks();\n      state.books = data;\n      state.rankName = \"点击榜\";\n      state.rankType = 1;\n    };\n    const newestRank = async () => {\n      const {\n        data\n      } = await listNewestRankBooks();\n      state.books = data;\n      state.rankName = \"新书榜\";\n      state.rankType = 2;\n    };\n    const updateRank = async () => {\n      const {\n        data\n      } = await listUpdateRankBooks();\n      state.books = data;\n      state.rankName = \"更新榜\";\n      state.rankType = 3;\n    };\n    const bookDetail = bookId => {\n      router.push({\n        path: `/book/${bookId}`\n      });\n    };\n    return {\n      ...toRefs(state),\n      bookDetail,\n      newestRank,\n      visitRank,\n      updateRank\n    };\n  },\n  computed: {\n    wordCountFormat(wordCount) {\n      return wordCount => {\n        if (wordCount.length > 5) {\n          return parseInt(wordCount / 10000) + \"万\";\n        }\n        if (wordCount.length > 4) {\n          return parseInt(wordCount / 1000) + \"千\";\n        }\n        return wordCount;\n      };\n    }\n  }\n};","map":{"version":3,"mappings":"AA8FA,OAAO,0BAA0B;AACjC,SAASA,QAAQ,EAAEC,MAAM,EAAEC,SAAS,EAAEC,GAAE,QAAS,KAAK;AACtD,SAASC,SAAS,EAAEC,QAAO,QAAS,YAAY;AAChD,SACEC,kBAAkB,EAClBC,mBAAmB,EACnBC,mBAAmB,QACd,YAAY;AACnB,OAAOC,MAAK,MAAO,4BAA4B;AAC/C,OAAOC,MAAK,MAAO,4BAA4B;AAC/C,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACVH,MAAM;IACNC;EACF,CAAC;EACDG,KAAKA,GAAG;IACN,MAAMC,KAAI,GAAIT,QAAQ,CAAC,CAAC;IACxB,MAAMU,MAAK,GAAIX,SAAS,CAAC,CAAC;IAE1B,MAAMY,KAAI,GAAIhB,QAAQ,CAAC;MACrBiB,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE;IACZ,CAAC,CAAC;IACFjB,SAAS,CAAC,MAAM;MACdkB,SAAS,CAAC,CAAC;IACb,CAAC,CAAC;IAEF,MAAMA,SAAQ,GAAI,YAAY;MAC5B,MAAM;QAAEC;MAAK,IAAI,MAAMf,kBAAkB,CAAC,CAAC;MAC3CU,KAAK,CAACC,KAAI,GAAII,IAAI;MAClBL,KAAK,CAACE,QAAO,GAAI,KAAK;MACtBF,KAAK,CAACG,QAAO,GAAI,CAAC;IACpB,CAAC;IAED,MAAMG,UAAS,GAAI,YAAY;MAC7B,MAAM;QAAED;MAAK,IAAI,MAAMb,mBAAmB,CAAC,CAAC;MAC5CQ,KAAK,CAACC,KAAI,GAAII,IAAI;MAClBL,KAAK,CAACE,QAAO,GAAI,KAAK;MACtBF,KAAK,CAACG,QAAO,GAAI,CAAC;IACpB,CAAC;IAED,MAAMI,UAAS,GAAI,YAAY;MAC7B,MAAM;QAAEF;MAAK,IAAI,MAAMd,mBAAmB,CAAC,CAAC;MAC5CS,KAAK,CAACC,KAAI,GAAII,IAAI;MAClBL,KAAK,CAACE,QAAO,GAAI,KAAK;MACtBF,KAAK,CAACG,QAAO,GAAI,CAAC;IACpB,CAAC;IAED,MAAMK,UAAS,GAAKC,MAAM,IAAK;MAC7BV,MAAM,CAACW,IAAI,CAAC;QAAEC,IAAI,EAAG,SAAQF,MAAO;MAAE,CAAC,CAAC;IAC1C,CAAC;IAED,OAAO;MACL,GAAGxB,MAAM,CAACe,KAAK,CAAC;MAChBQ,UAAU;MACVF,UAAU;MACVF,SAAS;MACTG;IACF,CAAC;EACH,CAAC;EACDK,QAAQ,EAAE;IACRC,eAAeA,CAACC,SAAS,EAAE;MACzB,OAAQA,SAAS,IAAK;QACpB,IAAIA,SAAS,CAACC,MAAK,GAAI,CAAC,EAAE;UACxB,OAAOC,QAAQ,CAACF,SAAQ,GAAI,KAAK,IAAI,GAAG;QAC1C;QACA,IAAIA,SAAS,CAACC,MAAK,GAAI,CAAC,EAAE;UACxB,OAAOC,QAAQ,CAACF,SAAQ,GAAI,IAAI,IAAI,GAAG;QACzC;QACA,OAAOA,SAAS;MAClB,CAAC;IACH;EACF;AACF,CAAC","names":["reactive","toRefs","onMounted","ref","useRouter","useRoute","listVisitRankBooks","listUpdateRankBooks","listNewestRankBooks","Header","Footer","name","components","setup","route","router","state","books","rankName","rankType","visitRank","data","newestRank","updateRank","bookDetail","bookId","push","path","computed","wordCountFormat","wordCount","length","parseInt"],"sourceRoot":"","sources":["D:\\desktop\\小说精品屋\\novel-front-web-master\\novel-front-web-master\\src\\views\\BookRank.vue"],"sourcesContent":["<template>\n  <Header />\n\n  <div class=\"main box_center cf mb50\">\n    <div class=\"channelRankingContent cf\">\n      <div class=\"wrap_left fl\">\n        <div class=\"wrap_bg\">\n          <!--榜单详情 start-->\n          <div class=\"pad20\">\n            <div class=\"book_tit\">\n              <div class=\"fl\">\n                <h3 class=\"font26 mt5 mb5\" id=\"rankName\">{{ rankName }}</h3>\n              </div>\n              <a class=\"fr\"></a>\n            </div>\n            <div class=\"updateTable rankTable\">\n              <table cellpadding=\"0\" cellspacing=\"0\">\n                <thead>\n                  <tr>\n                    <th class=\"rank\">排名</th>\n                    <th class=\"style\">类别</th>\n                    <th class=\"name\">书名</th>\n                    <th class=\"chapter\">最新章节</th>\n                    <th class=\"author\">作者</th>\n                    <th class=\"word\">字数</th>\n                  </tr>\n                </thead>\n                <tbody id=\"bookRankList\">\n                  <tr v-for=\"(item, index) in books\" :key=\"index\">\n                    <td class=\"rank\">\n                      <i :class=\"'num' + (Number(`${index}`) + 1)\">{{\n                        index + 1\n                      }}</i>\n                    </td>\n                    <td class=\"style\">\n                      <a href=\"javascript:void(0)\" @click=\"bookDetail(item.id)\"\n                        >[{{ item.categoryName }}]</a\n                      >\n                    </td>\n                    <td class=\"name\">\n                      <a\n                        @click=\"bookDetail(item.id)\"\n                        href=\"javascript:void(0)\"\n                        >{{ item.bookName }}</a\n                      >\n                    </td>\n                    <td class=\"chapter\">\n                      <a\n                        @click=\"bookDetail(item.id)\"\n                        href=\"javascript:void(0)\"\n                        >{{ item.lastChapterName }}</a\n                      >\n                    </td>\n                    <td class=\"author\">\n                      <a href=\"javascript:void(0)\">{{ item.authorName }}</a>\n                    </td>\n                    <td class=\"word\">{{ wordCountFormat(item.wordCount) }}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <!--榜单详情 end-->\n        </div>\n      </div>\n\n      <div class=\"wrap_right fr\">\n        <div class=\"wrap_inner wrap_right_cont mb20\">\n          <div class=\"title cf noborder\">\n            <h3 class=\"on\">排行榜</h3>\n          </div>\n          <div class=\"rightList2\">\n            <ul id=\"rankType\">\n              <li>\n                <a :class=\"`${rankType == 1 ? 'on' : ''}`\" href=\"javascript:void(0)\" @click=\"visitRank\"\n                  >点击榜</a\n                >\n              </li>\n              <li>\n                <a :class=\"`${rankType == 2 ? 'on' : ''}`\" href=\"javascript:void(0)\" @click=\"newestRank\">新书榜</a>\n              </li>\n              <li>\n                <a :class=\"`${rankType == 3 ? 'on' : ''}`\" href=\"javascript:void(0)\" @click=\"updateRank\">更新榜</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <Footer />\n</template>\n\n<script>\nimport \"@/assets/styles/book.css\";\nimport { reactive, toRefs, onMounted, ref } from \"vue\";\nimport { useRouter, useRoute } from \"vue-router\";\nimport {\n  listVisitRankBooks,\n  listUpdateRankBooks,\n  listNewestRankBooks,\n} from \"@/api/book\";\nimport Header from \"@/components/common/Header\";\nimport Footer from \"@/components/common/Footer\";\nexport default {\n  name: \"bookRank\",\n  components: {\n    Header,\n    Footer,\n  },\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n\n    const state = reactive({\n      books: [],\n      rankName: \"点击榜\",\n      rankType: 1,\n    });\n    onMounted(() => {\n      visitRank();\n    });\n\n    const visitRank = async () => {\n      const { data } = await listVisitRankBooks();\n      state.books = data;\n      state.rankName = \"点击榜\";\n      state.rankType = 1;\n    };\n\n    const newestRank = async () => {\n      const { data } = await listNewestRankBooks();\n      state.books = data;\n      state.rankName = \"新书榜\";\n      state.rankType = 2;\n    };\n\n    const updateRank = async () => {\n      const { data } = await listUpdateRankBooks();\n      state.books = data;\n      state.rankName = \"更新榜\";\n      state.rankType = 3;\n    };\n\n    const bookDetail = (bookId) => {\n      router.push({ path: `/book/${bookId}` });\n    };\n\n    return {\n      ...toRefs(state),\n      bookDetail,\n      newestRank,\n      visitRank,\n      updateRank,\n    };\n  },\n  computed: {\n    wordCountFormat(wordCount) {\n      return (wordCount) => {\n        if (wordCount.length > 5) {\n          return parseInt(wordCount / 10000) + \"万\";\n        }\n        if (wordCount.length > 4) {\n          return parseInt(wordCount / 1000) + \"千\";\n        }\n        return wordCount;\n      };\n    },\n  },\n};\n</script>\n\n<style>\n.el-pagination {\n  justify-content: center;\n}\n.el-pagination.is-background .el-pager li:not(.is-disabled).is-active {\n  background-color: #f80 !important;\n}\n.el-pagination {\n  --el-pagination-hover-color: #f80 !important;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}