{"ast":null,"code":"import { defineComponent, getCurrentInstance, provide, computed, resolveComponent, resolveDirective, openBlock, createElementBlock, normalizeClass, normalizeStyle, createElementVNode, renderSlot, withDirectives, createVNode, createCommentVNode, withCtx, createBlock, createTextVNode, toDisplayString, vShow } from 'vue';\nimport { debounce } from 'lodash-unified';\nimport '../../../directives/index2.mjs';\nimport '../../../hooks/index2.mjs';\nimport { ElScrollbar } from '../../scrollbar/index2.mjs';\nimport { createStore } from './store/helper2.mjs';\nimport TableLayout from './table-layout2.mjs';\nimport TableHeader from './table-header/index2.mjs';\nimport TableBody from './table-body/index2.mjs';\nimport TableFooter from './table-footer/index2.mjs';\nimport useUtils from './table/utils-helper2.mjs';\nimport useStyle from './table/style-helper2.mjs';\nimport defaultProps from './table/defaults2.mjs';\nimport { TABLE_INJECTION_KEY } from './tokens2.mjs';\nimport { hColgroup } from './h-helper2.mjs';\nimport { useScrollbar } from './composables/use-scrollbar2.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport Mousewheel from '../../../directives/mousewheel/index2.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index2.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index2.mjs';\nlet tableIdSeed = 1;\nconst _sfc_main = defineComponent({\n  name: \"ElTable\",\n  directives: {\n    Mousewheel\n  },\n  components: {\n    TableHeader,\n    TableBody,\n    TableFooter,\n    ElScrollbar,\n    hColgroup\n  },\n  props: defaultProps,\n  emits: [\"select\", \"select-all\", \"selection-change\", \"cell-mouse-enter\", \"cell-mouse-leave\", \"cell-contextmenu\", \"cell-click\", \"cell-dblclick\", \"row-click\", \"row-contextmenu\", \"row-dblclick\", \"header-click\", \"header-contextmenu\", \"sort-change\", \"filter-change\", \"current-change\", \"header-dragend\", \"expand-change\"],\n  setup(props) {\n    const {\n      t\n    } = useLocale();\n    const ns = useNamespace(\"table\");\n    const table = getCurrentInstance();\n    provide(TABLE_INJECTION_KEY, table);\n    const store = createStore(table, props);\n    table.store = store;\n    const layout = new TableLayout({\n      store: table.store,\n      table,\n      fit: props.fit,\n      showHeader: props.showHeader\n    });\n    table.layout = layout;\n    const isEmpty = computed(() => (store.states.data.value || []).length === 0);\n    const {\n      setCurrentRow,\n      getSelectionRows,\n      toggleRowSelection,\n      clearSelection,\n      clearFilter,\n      toggleAllSelection,\n      toggleRowExpansion,\n      clearSort,\n      sort\n    } = useUtils(store);\n    const {\n      isHidden,\n      renderExpanded,\n      setDragVisible,\n      isGroup,\n      handleMouseLeave,\n      handleHeaderFooterMousewheel,\n      tableSize,\n      bodyHeight,\n      height,\n      emptyBlockStyle,\n      handleFixedMousewheel,\n      fixedHeight,\n      fixedBodyHeight,\n      resizeProxyVisible,\n      bodyWidth,\n      resizeState,\n      doLayout,\n      tableBodyStyles,\n      tableLayout,\n      scrollbarViewStyle\n    } = useStyle(props, layout, store, table);\n    const {\n      scrollBarRef,\n      scrollTo,\n      setScrollLeft,\n      setScrollTop\n    } = useScrollbar();\n    const debouncedUpdateLayout = debounce(doLayout, 50);\n    const tableId = `el-table_${tableIdSeed++}`;\n    table.tableId = tableId;\n    table.state = {\n      isGroup,\n      resizeState,\n      doLayout,\n      debouncedUpdateLayout\n    };\n    const computedSumText = computed(() => props.sumText || t(\"el.table.sumText\"));\n    const computedEmptyText = computed(() => {\n      return props.emptyText || t(\"el.table.emptyText\");\n    });\n    return {\n      ns,\n      layout,\n      store,\n      handleHeaderFooterMousewheel,\n      handleMouseLeave,\n      tableId,\n      tableSize,\n      isHidden,\n      isEmpty,\n      renderExpanded,\n      resizeProxyVisible,\n      resizeState,\n      isGroup,\n      bodyWidth,\n      bodyHeight,\n      height,\n      tableBodyStyles,\n      emptyBlockStyle,\n      debouncedUpdateLayout,\n      handleFixedMousewheel,\n      fixedHeight,\n      fixedBodyHeight,\n      setCurrentRow,\n      getSelectionRows,\n      toggleRowSelection,\n      clearSelection,\n      clearFilter,\n      toggleAllSelection,\n      toggleRowExpansion,\n      clearSort,\n      doLayout,\n      sort,\n      t,\n      setDragVisible,\n      context: table,\n      computedSumText,\n      computedEmptyText,\n      tableLayout,\n      scrollbarViewStyle,\n      scrollBarRef,\n      scrollTo,\n      setScrollLeft,\n      setScrollTop\n    };\n  }\n});\nconst _hoisted_1 = [\"data-prefix\"];\nconst _hoisted_2 = {\n  ref: \"hiddenColumns\",\n  class: \"hidden-columns\"\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_hColgroup = resolveComponent(\"hColgroup\");\n  const _component_table_header = resolveComponent(\"table-header\");\n  const _component_table_body = resolveComponent(\"table-body\");\n  const _component_el_scrollbar = resolveComponent(\"el-scrollbar\");\n  const _component_table_footer = resolveComponent(\"table-footer\");\n  const _directive_mousewheel = resolveDirective(\"mousewheel\");\n  return openBlock(), createElementBlock(\"div\", {\n    ref: \"tableWrapper\",\n    class: normalizeClass([{\n      [_ctx.ns.m(\"fit\")]: _ctx.fit,\n      [_ctx.ns.m(\"striped\")]: _ctx.stripe,\n      [_ctx.ns.m(\"border\")]: _ctx.border || _ctx.isGroup,\n      [_ctx.ns.m(\"hidden\")]: _ctx.isHidden,\n      [_ctx.ns.m(\"group\")]: _ctx.isGroup,\n      [_ctx.ns.m(\"fluid-height\")]: _ctx.maxHeight,\n      [_ctx.ns.m(\"scrollable-x\")]: _ctx.layout.scrollX.value,\n      [_ctx.ns.m(\"scrollable-y\")]: _ctx.layout.scrollY.value,\n      [_ctx.ns.m(\"enable-row-hover\")]: !_ctx.store.states.isComplex.value,\n      [_ctx.ns.m(\"enable-row-transition\")]: (_ctx.store.states.data.value || []).length !== 0 && (_ctx.store.states.data.value || []).length < 100,\n      \"has-footer\": _ctx.showSummary\n    }, _ctx.ns.m(_ctx.tableSize), _ctx.className, _ctx.ns.b(), _ctx.ns.m(`layout-${_ctx.tableLayout}`)]),\n    style: normalizeStyle(_ctx.style),\n    \"data-prefix\": _ctx.ns.namespace.value,\n    onMouseleave: _cache[0] || (_cache[0] = $event => _ctx.handleMouseLeave())\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.ns.e(\"inner-wrapper\"))\n  }, [createElementVNode(\"div\", _hoisted_2, [renderSlot(_ctx.$slots, \"default\")], 512), _ctx.showHeader && _ctx.tableLayout === \"fixed\" ? withDirectives((openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    ref: \"headerWrapper\",\n    class: normalizeClass(_ctx.ns.e(\"header-wrapper\"))\n  }, [createElementVNode(\"table\", {\n    ref: \"tableHeader\",\n    class: normalizeClass(_ctx.ns.e(\"header\")),\n    style: normalizeStyle(_ctx.tableBodyStyles),\n    border: \"0\",\n    cellpadding: \"0\",\n    cellspacing: \"0\"\n  }, [createVNode(_component_hColgroup, {\n    columns: _ctx.store.states.columns.value,\n    \"table-layout\": _ctx.tableLayout\n  }, null, 8, [\"columns\", \"table-layout\"]), createVNode(_component_table_header, {\n    ref: \"tableHeaderRef\",\n    border: _ctx.border,\n    \"default-sort\": _ctx.defaultSort,\n    store: _ctx.store,\n    onSetDragVisible: _ctx.setDragVisible\n  }, null, 8, [\"border\", \"default-sort\", \"store\", \"onSetDragVisible\"])], 6)], 2)), [[_directive_mousewheel, _ctx.handleHeaderFooterMousewheel]]) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n    ref: \"bodyWrapper\",\n    style: normalizeStyle(_ctx.bodyHeight),\n    class: normalizeClass(_ctx.ns.e(\"body-wrapper\"))\n  }, [createVNode(_component_el_scrollbar, {\n    ref: \"scrollBarRef\",\n    height: _ctx.maxHeight ? void 0 : _ctx.height,\n    \"max-height\": _ctx.maxHeight ? _ctx.height : void 0,\n    \"view-style\": _ctx.scrollbarViewStyle,\n    always: _ctx.scrollbarAlwaysOn\n  }, {\n    default: withCtx(() => [createElementVNode(\"table\", {\n      ref: \"tableBody\",\n      class: normalizeClass(_ctx.ns.e(\"body\")),\n      cellspacing: \"0\",\n      cellpadding: \"0\",\n      border: \"0\",\n      style: normalizeStyle({\n        width: _ctx.bodyWidth,\n        tableLayout: _ctx.tableLayout\n      })\n    }, [createVNode(_component_hColgroup, {\n      columns: _ctx.store.states.columns.value,\n      \"table-layout\": _ctx.tableLayout\n    }, null, 8, [\"columns\", \"table-layout\"]), _ctx.showHeader && _ctx.tableLayout === \"auto\" ? (openBlock(), createBlock(_component_table_header, {\n      key: 0,\n      border: _ctx.border,\n      \"default-sort\": _ctx.defaultSort,\n      store: _ctx.store,\n      onSetDragVisible: _ctx.setDragVisible\n    }, null, 8, [\"border\", \"default-sort\", \"store\", \"onSetDragVisible\"])) : createCommentVNode(\"v-if\", true), createVNode(_component_table_body, {\n      context: _ctx.context,\n      highlight: _ctx.highlightCurrentRow,\n      \"row-class-name\": _ctx.rowClassName,\n      \"tooltip-effect\": _ctx.tooltipEffect,\n      \"row-style\": _ctx.rowStyle,\n      store: _ctx.store,\n      stripe: _ctx.stripe\n    }, null, 8, [\"context\", \"highlight\", \"row-class-name\", \"tooltip-effect\", \"row-style\", \"store\", \"stripe\"])], 6), _ctx.isEmpty ? (openBlock(), createElementBlock(\"div\", {\n      key: 0,\n      ref: \"emptyBlock\",\n      style: normalizeStyle(_ctx.emptyBlockStyle),\n      class: normalizeClass(_ctx.ns.e(\"empty-block\"))\n    }, [createElementVNode(\"span\", {\n      class: normalizeClass(_ctx.ns.e(\"empty-text\"))\n    }, [renderSlot(_ctx.$slots, \"empty\", {}, () => [createTextVNode(toDisplayString(_ctx.computedEmptyText), 1)])], 2)], 6)) : createCommentVNode(\"v-if\", true), _ctx.$slots.append ? (openBlock(), createElementBlock(\"div\", {\n      key: 1,\n      ref: \"appendWrapper\",\n      class: normalizeClass(_ctx.ns.e(\"append-wrapper\"))\n    }, [renderSlot(_ctx.$slots, \"append\")], 2)) : createCommentVNode(\"v-if\", true)]),\n    _: 3\n  }, 8, [\"height\", \"max-height\", \"view-style\", \"always\"])], 6), _ctx.border || _ctx.isGroup ? (openBlock(), createElementBlock(\"div\", {\n    key: 1,\n    class: normalizeClass(_ctx.ns.e(\"border-left-patch\"))\n  }, null, 2)) : createCommentVNode(\"v-if\", true)], 2), _ctx.showSummary ? withDirectives((openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    ref: \"footerWrapper\",\n    class: normalizeClass(_ctx.ns.e(\"footer-wrapper\"))\n  }, [createVNode(_component_table_footer, {\n    border: _ctx.border,\n    \"default-sort\": _ctx.defaultSort,\n    store: _ctx.store,\n    style: normalizeStyle(_ctx.tableBodyStyles),\n    \"sum-text\": _ctx.computedSumText,\n    \"summary-method\": _ctx.summaryMethod\n  }, null, 8, [\"border\", \"default-sort\", \"store\", \"style\", \"sum-text\", \"summary-method\"])], 2)), [[vShow, !_ctx.isEmpty], [_directive_mousewheel, _ctx.handleHeaderFooterMousewheel]]) : createCommentVNode(\"v-if\", true), withDirectives(createElementVNode(\"div\", {\n    ref: \"resizeProxy\",\n    class: normalizeClass(_ctx.ns.e(\"column-resize-proxy\"))\n  }, null, 2), [[vShow, _ctx.resizeProxyVisible]])], 46, _hoisted_1);\n}\nvar Table = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/table/src/table.vue\"]]);\nexport { Table as default };","map":{"version":3,"mappings":"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","names":["tableIdSeed","_sfc_main","defineComponent","name","directives","Mousewheel","components","TableHeader","TableBody","TableFooter","ElScrollbar","hColgroup","props","emits","setup","t","useLocale","useNamespace","table","getCurrentInstance","provide","TABLE_INJECTION_KEY","createStore","store","TableLayout","fit","showHeader","layout","computed","data","value","setCurrentRow","getSelectionRows","toggleRowSelection","clearSelection","clearFilter","toggleAllSelection","toggleRowExpansion","clearSort","sort","useUtils","isHidden","renderExpanded","setDragVisible","isGroup","handleMouseLeave","handleHeaderFooterMousewheel","tableSize","bodyHeight","height","emptyBlockStyle","handleFixedMousewheel","fixedHeight","fixedBodyHeight","resizeProxyVisible","bodyWidth","resizeState","doLayout","tableBodyStyles","tableLayout","scrollbarViewStyle","useStyle","scrollBarRef","scrollTo","setScrollLeft","setScrollTop","useScrollbar","debounce","tableId","state","debouncedUpdateLayout","computedSumText","sumText","emptyText","ns","isEmpty","context","computedEmptyText","ref","class","_createElementBlock","m","_ctx","scrollX","scrollY","states","isComplex","length","b","style","_normalizeStyle","namespace","onMouseleave","_cache","_createElementVNode","_normalizeClass","e","_hoisted_2","_renderSlot","key","border","cellpadding","cellspacing","_createVNode","columns","onSetDragVisible","always","width","_createBlock","highlight","stripe","append"],"sources":["../../../../../../packages/components/table/src/table.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"tableWrapper\"\n    :class=\"[\n      {\n        [ns.m('fit')]: fit,\n        [ns.m('striped')]: stripe,\n        [ns.m('border')]: border || isGroup,\n        [ns.m('hidden')]: isHidden,\n        [ns.m('group')]: isGroup,\n        [ns.m('fluid-height')]: maxHeight,\n        [ns.m('scrollable-x')]: layout.scrollX.value,\n        [ns.m('scrollable-y')]: layout.scrollY.value,\n        [ns.m('enable-row-hover')]: !store.states.isComplex.value,\n        [ns.m('enable-row-transition')]:\n          (store.states.data.value || []).length !== 0 &&\n          (store.states.data.value || []).length < 100,\n        'has-footer': showSummary,\n      },\n      ns.m(tableSize),\n      className,\n      ns.b(),\n      ns.m(`layout-${tableLayout}`),\n    ]\"\n    :style=\"style\"\n    :data-prefix=\"ns.namespace.value\"\n    @mouseleave=\"handleMouseLeave()\"\n  >\n    <div :class=\"ns.e('inner-wrapper')\">\n      <div ref=\"hiddenColumns\" class=\"hidden-columns\">\n        <slot />\n      </div>\n      <div\n        v-if=\"showHeader && tableLayout === 'fixed'\"\n        ref=\"headerWrapper\"\n        v-mousewheel=\"handleHeaderFooterMousewheel\"\n        :class=\"ns.e('header-wrapper')\"\n      >\n        <table\n          ref=\"tableHeader\"\n          :class=\"ns.e('header')\"\n          :style=\"tableBodyStyles\"\n          border=\"0\"\n          cellpadding=\"0\"\n          cellspacing=\"0\"\n        >\n          <hColgroup\n            :columns=\"store.states.columns.value\"\n            :table-layout=\"tableLayout\"\n          />\n          <table-header\n            ref=\"tableHeaderRef\"\n            :border=\"border\"\n            :default-sort=\"defaultSort\"\n            :store=\"store\"\n            @set-drag-visible=\"setDragVisible\"\n          />\n        </table>\n      </div>\n      <div ref=\"bodyWrapper\" :style=\"bodyHeight\" :class=\"ns.e('body-wrapper')\">\n        <el-scrollbar\n          ref=\"scrollBarRef\"\n          :height=\"maxHeight ? undefined : height\"\n          :max-height=\"maxHeight ? height : undefined\"\n          :view-style=\"scrollbarViewStyle\"\n          :always=\"scrollbarAlwaysOn\"\n        >\n          <table\n            ref=\"tableBody\"\n            :class=\"ns.e('body')\"\n            cellspacing=\"0\"\n            cellpadding=\"0\"\n            border=\"0\"\n            :style=\"{\n              width: bodyWidth,\n              tableLayout,\n            }\"\n          >\n            <hColgroup\n              :columns=\"store.states.columns.value\"\n              :table-layout=\"tableLayout\"\n            />\n            <table-header\n              v-if=\"showHeader && tableLayout === 'auto'\"\n              :border=\"border\"\n              :default-sort=\"defaultSort\"\n              :store=\"store\"\n              @set-drag-visible=\"setDragVisible\"\n            />\n            <table-body\n              :context=\"context\"\n              :highlight=\"highlightCurrentRow\"\n              :row-class-name=\"rowClassName\"\n              :tooltip-effect=\"tooltipEffect\"\n              :row-style=\"rowStyle\"\n              :store=\"store\"\n              :stripe=\"stripe\"\n            />\n          </table>\n          <div\n            v-if=\"isEmpty\"\n            ref=\"emptyBlock\"\n            :style=\"emptyBlockStyle\"\n            :class=\"ns.e('empty-block')\"\n          >\n            <span :class=\"ns.e('empty-text')\">\n              <slot name=\"empty\">{{ computedEmptyText }}</slot>\n            </span>\n          </div>\n          <div\n            v-if=\"$slots.append\"\n            ref=\"appendWrapper\"\n            :class=\"ns.e('append-wrapper')\"\n          >\n            <slot name=\"append\" />\n          </div>\n        </el-scrollbar>\n      </div>\n      <div v-if=\"border || isGroup\" :class=\"ns.e('border-left-patch')\" />\n    </div>\n    <div\n      v-if=\"showSummary\"\n      v-show=\"!isEmpty\"\n      ref=\"footerWrapper\"\n      v-mousewheel=\"handleHeaderFooterMousewheel\"\n      :class=\"ns.e('footer-wrapper')\"\n    >\n      <table-footer\n        :border=\"border\"\n        :default-sort=\"defaultSort\"\n        :store=\"store\"\n        :style=\"tableBodyStyles\"\n        :sum-text=\"computedSumText\"\n        :summary-method=\"summaryMethod\"\n      />\n    </div>\n    <div\n      v-show=\"resizeProxyVisible\"\n      ref=\"resizeProxy\"\n      :class=\"ns.e('column-resize-proxy')\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, getCurrentInstance, provide } from 'vue'\nimport { debounce } from 'lodash-unified'\nimport { Mousewheel } from '@element-plus/directives'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport { createStore } from './store/helper'\nimport TableLayout from './table-layout'\nimport TableHeader from './table-header'\nimport TableBody from './table-body'\nimport TableFooter from './table-footer'\nimport useUtils from './table/utils-helper'\nimport useStyle from './table/style-helper'\nimport defaultProps from './table/defaults'\nimport { TABLE_INJECTION_KEY } from './tokens'\nimport { hColgroup } from './h-helper'\nimport { useScrollbar } from './composables/use-scrollbar'\n\nimport type { Table } from './table/defaults'\n\nlet tableIdSeed = 1\nexport default defineComponent({\n  name: 'ElTable',\n  directives: {\n    Mousewheel,\n  },\n  components: {\n    TableHeader,\n    TableBody,\n    TableFooter,\n    ElScrollbar,\n    hColgroup,\n  },\n  props: defaultProps,\n  emits: [\n    'select',\n    'select-all',\n    'selection-change',\n    'cell-mouse-enter',\n    'cell-mouse-leave',\n    'cell-contextmenu',\n    'cell-click',\n    'cell-dblclick',\n    'row-click',\n    'row-contextmenu',\n    'row-dblclick',\n    'header-click',\n    'header-contextmenu',\n    'sort-change',\n    'filter-change',\n    'current-change',\n    'header-dragend',\n    'expand-change',\n  ],\n  setup(props) {\n    type Row = typeof props.data[number]\n    const { t } = useLocale()\n    const ns = useNamespace('table')\n    const table = getCurrentInstance() as Table<Row>\n    provide(TABLE_INJECTION_KEY, table)\n    const store = createStore<Row>(table, props)\n    table.store = store\n    const layout = new TableLayout<Row>({\n      store: table.store,\n      table,\n      fit: props.fit,\n      showHeader: props.showHeader,\n    })\n    table.layout = layout\n\n    const isEmpty = computed(() => (store.states.data.value || []).length === 0)\n\n    /**\n     * open functions\n     */\n    const {\n      setCurrentRow,\n      getSelectionRows,\n      toggleRowSelection,\n      clearSelection,\n      clearFilter,\n      toggleAllSelection,\n      toggleRowExpansion,\n      clearSort,\n      sort,\n    } = useUtils<Row>(store)\n    const {\n      isHidden,\n      renderExpanded,\n      setDragVisible,\n      isGroup,\n      handleMouseLeave,\n      handleHeaderFooterMousewheel,\n      tableSize,\n      bodyHeight,\n      height,\n      emptyBlockStyle,\n      handleFixedMousewheel,\n      fixedHeight,\n      fixedBodyHeight,\n      resizeProxyVisible,\n      bodyWidth,\n      resizeState,\n      doLayout,\n      tableBodyStyles,\n      tableLayout,\n      scrollbarViewStyle,\n    } = useStyle<Row>(props, layout, store, table)\n\n    const { scrollBarRef, scrollTo, setScrollLeft, setScrollTop } =\n      useScrollbar()\n\n    const debouncedUpdateLayout = debounce(doLayout, 50)\n\n    const tableId = `el-table_${tableIdSeed++}`\n    table.tableId = tableId\n    table.state = {\n      isGroup,\n      resizeState,\n      doLayout,\n      debouncedUpdateLayout,\n    }\n    const computedSumText = computed(\n      () => props.sumText || t('el.table.sumText')\n    )\n\n    const computedEmptyText = computed(() => {\n      return props.emptyText || t('el.table.emptyText')\n    })\n\n    return {\n      ns,\n      layout,\n      store,\n      handleHeaderFooterMousewheel,\n      handleMouseLeave,\n      tableId,\n      tableSize,\n      isHidden,\n      isEmpty,\n      renderExpanded,\n      resizeProxyVisible,\n      resizeState,\n      isGroup,\n      bodyWidth,\n      bodyHeight,\n      height,\n      tableBodyStyles,\n      emptyBlockStyle,\n      debouncedUpdateLayout,\n      handleFixedMousewheel,\n      fixedHeight,\n      fixedBodyHeight,\n      setCurrentRow,\n      getSelectionRows,\n      toggleRowSelection,\n      clearSelection,\n      clearFilter,\n      toggleAllSelection,\n      toggleRowExpansion,\n      clearSort,\n      doLayout,\n      sort,\n      t,\n      setDragVisible,\n      context: table,\n      computedSumText,\n      computedEmptyText,\n      tableLayout,\n      scrollbarViewStyle,\n      scrollBarRef,\n      scrollTo,\n      setScrollLeft,\n      setScrollTop,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}