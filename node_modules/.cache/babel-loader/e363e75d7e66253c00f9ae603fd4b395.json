{"ast":null,"code":"import { ref, watch } from 'vue';\nimport '../../../utils/index2.mjs';\nimport { genFileId } from './upload3.mjs';\nimport { debugWarn, throwError } from '../../../utils/error2.mjs';\nconst SCOPE = \"ElUpload\";\nconst revokeObjectURL = file => {\n  var _a;\n  if ((_a = file.url) == null ? void 0 : _a.startsWith(\"blob:\")) {\n    URL.revokeObjectURL(file.url);\n  }\n};\nconst useHandlers = (props, uploadRef) => {\n  const uploadFiles = ref([]);\n  const getFile = rawFile => uploadFiles.value.find(file => file.uid === rawFile.uid);\n  function abort(file) {\n    var _a;\n    (_a = uploadRef.value) == null ? void 0 : _a.abort(file);\n  }\n  function clearFiles(states = [\"ready\", \"uploading\", \"success\", \"fail\"]) {\n    uploadFiles.value = uploadFiles.value.filter(row => !states.includes(row.status));\n  }\n  const handleError = (err, rawFile) => {\n    const file = getFile(rawFile);\n    if (!file) return;\n    file.status = \"fail\";\n    uploadFiles.value.splice(uploadFiles.value.indexOf(file), 1);\n    props.onError(err, file, uploadFiles.value);\n    props.onChange(file, uploadFiles.value);\n  };\n  const handleProgress = (evt, rawFile) => {\n    const file = getFile(rawFile);\n    if (!file) return;\n    props.onProgress(evt, file, uploadFiles.value);\n    file.status = \"uploading\";\n    file.percentage = Math.round(evt.percent);\n  };\n  const handleSuccess = (response, rawFile) => {\n    const file = getFile(rawFile);\n    if (!file) return;\n    file.status = \"success\";\n    file.response = response;\n    props.onSuccess(response, file, uploadFiles.value);\n    props.onChange(file, uploadFiles.value);\n  };\n  const handleStart = file => {\n    const uploadFile = {\n      name: file.name,\n      percentage: 0,\n      status: \"ready\",\n      size: file.size,\n      raw: file,\n      uid: file.uid\n    };\n    if (props.listType === \"picture-card\" || props.listType === \"picture\") {\n      try {\n        uploadFile.url = URL.createObjectURL(file);\n      } catch (err) {\n        debugWarn(SCOPE, err.message);\n        props.onError(err, uploadFile, uploadFiles.value);\n      }\n    }\n    uploadFiles.value.push(uploadFile);\n    props.onChange(uploadFile, uploadFiles.value);\n  };\n  const handleRemove = async file => {\n    const uploadFile = file instanceof File ? getFile(file) : file;\n    if (!uploadFile) throwError(SCOPE, \"file to be removed not found\");\n    const doRemove = file2 => {\n      abort(file2);\n      const fileList = uploadFiles.value;\n      fileList.splice(fileList.indexOf(file2), 1);\n      props.onRemove(file2, fileList);\n      revokeObjectURL(file2);\n    };\n    if (props.beforeRemove) {\n      const before = await props.beforeRemove(uploadFile, uploadFiles.value);\n      if (before !== false) doRemove(uploadFile);\n    } else {\n      doRemove(uploadFile);\n    }\n  };\n  function submit() {\n    uploadFiles.value.filter(({\n      status\n    }) => status === \"ready\").forEach(({\n      raw\n    }) => {\n      var _a;\n      return raw && ((_a = uploadRef.value) == null ? void 0 : _a.upload(raw));\n    });\n  }\n  watch(() => props.listType, val => {\n    if (val !== \"picture-card\" && val !== \"picture\") {\n      return;\n    }\n    uploadFiles.value = uploadFiles.value.map(file => {\n      const {\n        raw,\n        url\n      } = file;\n      if (!url && raw) {\n        try {\n          file.url = URL.createObjectURL(raw);\n        } catch (err) {\n          props.onError(err, file, uploadFiles.value);\n        }\n      }\n      return file;\n    });\n  });\n  watch(() => props.fileList, fileList => {\n    for (const file of fileList) {\n      file.uid || (file.uid = genFileId());\n      file.status || (file.status = \"success\");\n    }\n    uploadFiles.value = fileList;\n  }, {\n    immediate: true,\n    deep: true\n  });\n  return {\n    abort,\n    clearFiles,\n    handleError,\n    handleProgress,\n    handleStart,\n    handleSuccess,\n    handleRemove,\n    submit,\n    uploadFiles\n  };\n};\nexport { useHandlers };","map":{"version":3,"mappings":"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","names":["SCOPE","revokeObjectURL","file","_a","url","startsWith","URL","useHandlers","props","uploadRef","uploadFiles","ref","getFile","rawFile","value","find","uid","abort","clearFiles","states","filter","row","includes","status","handleError","err","splice","indexOf","onError","onChange","handleProgress","evt","onProgress","percentage","Math","round","percent","handleSuccess","response","onSuccess","handleStart","uploadFile","name","size","raw","listType","createObjectURL","debugWarn","message","push","handleRemove","File","throwError","doRemove","file2","fileList","onRemove","beforeRemove","before","submit","forEach","upload","watch","val","map","genFileId","immediate","deep"],"sources":["../../../../../../packages/components/upload/src/use-handlers.ts"],"sourcesContent":["import { ref, watch } from 'vue'\nimport { debugWarn, throwError } from '@element-plus/utils'\nimport { genFileId } from './upload'\nimport type { ShallowRef } from 'vue'\nimport type {\n  UploadContentInstance,\n  UploadContentProps,\n} from './upload-content'\nimport type {\n  UploadFile,\n  UploadFiles,\n  UploadProps,\n  UploadRawFile,\n  UploadStatus,\n} from './upload'\n\nconst SCOPE = 'ElUpload'\n\nconst revokeObjectURL = (file: UploadFile) => {\n  if (file.url?.startsWith('blob:')) {\n    URL.revokeObjectURL(file.url)\n  }\n}\n\nexport const useHandlers = (\n  props: UploadProps,\n  uploadRef: ShallowRef<UploadContentInstance | undefined>\n) => {\n  const uploadFiles = ref<UploadFiles>([])\n\n  const getFile = (rawFile: UploadRawFile) =>\n    uploadFiles.value.find((file) => file.uid === rawFile.uid)\n\n  function abort(file: UploadFile) {\n    uploadRef.value?.abort(file)\n  }\n\n  function clearFiles(\n    /** @default ['ready', 'uploading', 'success', 'fail'] */\n    states: UploadStatus[] = ['ready', 'uploading', 'success', 'fail']\n  ) {\n    uploadFiles.value = uploadFiles.value.filter(\n      (row) => !states.includes(row.status)\n    )\n  }\n\n  const handleError: UploadContentProps['onError'] = (err, rawFile) => {\n    const file = getFile(rawFile)\n    if (!file) return\n\n    file.status = 'fail'\n    uploadFiles.value.splice(uploadFiles.value.indexOf(file), 1)\n    props.onError(err, file, uploadFiles.value)\n    props.onChange(file, uploadFiles.value)\n  }\n\n  const handleProgress: UploadContentProps['onProgress'] = (evt, rawFile) => {\n    const file = getFile(rawFile)\n    if (!file) return\n\n    props.onProgress(evt, file, uploadFiles.value)\n    file.status = 'uploading'\n    file.percentage = Math.round(evt.percent)\n  }\n\n  const handleSuccess: UploadContentProps['onSuccess'] = (\n    response,\n    rawFile\n  ) => {\n    const file = getFile(rawFile)\n    if (!file) return\n\n    file.status = 'success'\n    file.response = response\n    props.onSuccess(response, file, uploadFiles.value)\n    props.onChange(file, uploadFiles.value)\n  }\n\n  const handleStart: UploadContentProps['onStart'] = (file) => {\n    const uploadFile: UploadFile = {\n      name: file.name,\n      percentage: 0,\n      status: 'ready',\n      size: file.size,\n      raw: file,\n      uid: file.uid,\n    }\n    if (props.listType === 'picture-card' || props.listType === 'picture') {\n      try {\n        uploadFile.url = URL.createObjectURL(file)\n      } catch (err: unknown) {\n        debugWarn(SCOPE, (err as Error).message)\n        props.onError(err as Error, uploadFile, uploadFiles.value)\n      }\n    }\n    uploadFiles.value.push(uploadFile)\n    props.onChange(uploadFile, uploadFiles.value)\n  }\n\n  const handleRemove: UploadContentProps['onRemove'] = async (\n    file\n  ): Promise<void> => {\n    const uploadFile = file instanceof File ? getFile(file) : file\n    if (!uploadFile) throwError(SCOPE, 'file to be removed not found')\n\n    const doRemove = (file: UploadFile) => {\n      abort(file)\n      const fileList = uploadFiles.value\n      fileList.splice(fileList.indexOf(file), 1)\n      props.onRemove(file, fileList)\n      revokeObjectURL(file)\n    }\n\n    if (props.beforeRemove) {\n      const before = await props.beforeRemove(uploadFile, uploadFiles.value)\n      if (before !== false) doRemove(uploadFile)\n    } else {\n      doRemove(uploadFile)\n    }\n  }\n\n  function submit() {\n    uploadFiles.value\n      .filter(({ status }) => status === 'ready')\n      .forEach(({ raw }) => raw && uploadRef.value?.upload(raw))\n  }\n\n  watch(\n    () => props.listType,\n    (val) => {\n      if (val !== 'picture-card' && val !== 'picture') {\n        return\n      }\n\n      uploadFiles.value = uploadFiles.value.map((file) => {\n        const { raw, url } = file\n        if (!url && raw) {\n          try {\n            file.url = URL.createObjectURL(raw)\n          } catch (err: unknown) {\n            props.onError(err as Error, file, uploadFiles.value)\n          }\n        }\n        return file\n      })\n    }\n  )\n\n  watch(\n    () => props.fileList,\n    (fileList) => {\n      for (const file of fileList) {\n        file.uid ||= genFileId()\n        file.status ||= 'success'\n      }\n      uploadFiles.value = fileList as UploadFiles\n    },\n    { immediate: true, deep: true }\n  )\n\n  return {\n    abort,\n    clearFiles,\n    handleError,\n    handleProgress,\n    handleStart,\n    handleSuccess,\n    handleRemove,\n    submit,\n    uploadFiles,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}